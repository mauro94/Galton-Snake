
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "PROGRAMrelop_grequal relop_lsequal relop_equals relop_notequal relop_and relop_or cte_string cte_float cte_int cte_char id cbind printTags int float dataframe char null row while main printRow return string void else if func csv correlate correlateHeaders col printCell printHeaders rbind printData printColACCESS_COL : id SA_FIND_ID '.' row '(' EXP ')' ACCESS_ROW : id SA_FIND_ID '.' col '(' EXP ')' ASSIGNMENT : id SA_FIND_ID '=' EXP ';' BIND_COLS : cbind '(' id SA_FIND_ID ',' ACCESS_COL ')' ';' BIND_ROWS : rbind '(' id SA_FIND_ID ',' ACCESS_ROW ')' ';' BINDINGS : BIND_ROWS \n                | BIND_COLSBLOCK : '{' BLOCK_INST BLOCK_STM '}' \n             | '{' BLOCK_INST BLOCK_STM return EXP '}' BLOCK_INST : INSTANTIATE BLOCK_INST \n                  | emptyBLOCK_STM : STATEMENT BLOCK_STM \n                 | emptyCALLFUNC : id SA_FIND_ID '(' CALLFUNC_PARAMS ')' ';' CALLFUNC_PARAMS : EXP\n                       | EXP ','\n                       | emptyCONDITION : if '(' SUPER_EXPRESSION ')' BLOCK \n                 | if '(' SUPER_EXPRESSION ')' BLOCK else BLOCKCORR_HEADERS : correlateHeaders '(' TABLE_HEADER ',' TABLE_HEADER ',' VAR_CTE ')' ';' CORR : correlate '(' id SA_FIND_ID ',' id SA_FIND_ID ',' VAR_CTE ')' ';' CORRELATION : CORR_HEADERS \n                   | CORRCREATE_DF : dataframe SA_NEW_DF '(' id SA_CREATE_VAR ',' '[' CREATE_DF_TAGS ']' ',' FILE_INPUT ')' ';' \n                 | dataframe SA_NEW_DF '(' id SA_CREATE_VAR ',' FILE_INPUT ')' ';' CREATE_DF_TAGS : cte_string ',' \n                      | cte_stringEXP : TERM \n           | TERM '+' EXP \n           | TERM '-' EXPEXPRESSION : EXP \n                  | EXP EXPRESSION_SYM EXPEXPRESSION_SYM : '<' \n                      | '>' \n                      | relop_lsequal \n                      | relop_grequal \n                      | relop_equals \n                      | relop_notequal FACTOR : '(' EXPRESSION ')' \n              | '+' SA_NEW_SIGN VAR_CTE \n              | '-' SA_NEW_SIGN VAR_CTE \n              | VAR_CTEFILE_INPUT : cte_string '.' csvFUNCTION : void SA_VOID_FUNCTION func id SA_NEW_FUNCTION '(' PARAMETERS SA_FUNCTION_PARAMS ')' ':' BLOCK \n                | TYPE func id SA_NEW_FUNCTION '(' PARAMETERS SA_FUNCTION_PARAMS ')' ':' BLOCKINSTANTIATE : CREATE_DF \n                   | VARSLOOP : while '(' SUPER_EXPRESSION ')' BLOCKOPERATION : BINDINGS \n                 | CORRELATION PARAMETERS : TYPE id ',' PARAMETERS \n                  | TYPE idPRINT_CELL : printCell id SA_FIND_ID '[' EXP ',' EXP ']' ';' PRINT_COL : printCol TABLE_HEADER ';'\n                 | printCol ACCESS_COL ';' PRINT_DATA : printData id SA_FIND_ID ';' PRINT_HEADERS : printHeaders id SA_FIND_ID ';' PRINT_ROW : printRow id ACCESS_ROW ';' PRINT_TAGS : printTags id SA_FIND_ID ';' PRINT : PRINT_COL\n             | PRINT_TAGS\n             | PRINT_DATA\n             | PRINT_HEADERS\n             | PRINT_CELL\n             | PRINT_ROWPROGRAM : SA_PROGRAM_START PROGRAM_VARS PROGRAM_FUNCTIONS main SA_MAIN_START ':' BLOCKPROGRAM_VARS : INSTANTIATE PROGRAM_VARS\n                    | emptyPROGRAM_FUNCTIONS : FUNCTION PROGRAM_FUNCTIONS\n                         | emptySTATEMENT : ASSIGNMENT\n                 | CONDITION\n                 | OPERATION\n                 | PRINT\n                 | LOOP\n                 | CALLFUNCSUPER_EXPRESSION : EXPRESSION\n                        | EXPRESSION relop_and EXPRESSION\n                        | EXPRESSION relop_or EXPRESSIONTABLE_HEADER : id SA_FIND_ID '$' idTERM : FACTOR\n            | FACTOR '*' TERM\n            | FACTOR '/' TERMTYPE : int\n            | float\n            | char\n            | string VAR_CTE : id SA_FIND_ID\n               | cte_float\n               | cte_int\n               | cte_char\n               | cte_string\n               | nullVARS : TYPE VARS_ID ';' VARS_ID : id SA_CREATE_VAR ',' VARS_ID\n               | id SA_CREATE_VAR empty :SA_FIND_ID : emptySA_PROGRAM_START : emptySA_MAIN_START : emptySA_NEW_FUNCTION : emptySA_FUNCTION_PARAMS : emptySA_NEW_DF : emptySA_NEW_SIGN : emptySA_CREATE_VAR : emptySA_VOID_FUNCTION : empty"
    
_lr_action_items = {'cbind':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,69,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,69,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'csv':([60,],[103,]),'printTags':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,71,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,71,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'int':([0,1,3,4,6,10,11,13,15,19,31,48,49,54,57,104,109,117,168,195,208,232,],[-97,5,-99,-47,5,-46,-68,5,-67,5,-94,5,5,5,5,-25,5,-8,-45,-9,-44,-24,]),'relop_grequal':([113,137,138,139,140,141,142,148,149,150,151,182,214,215,216,217,218,222,223,],[-98,-42,177,-90,-97,-28,-93,-91,-92,-89,-81,-88,-30,-29,-39,-40,-41,-82,-83,]),'float':([0,1,3,4,6,10,11,13,15,19,31,48,49,54,57,104,109,117,168,195,208,232,],[-97,12,-99,-47,12,-46,-68,12,-67,12,-94,12,12,12,12,-25,12,-8,-45,-9,-44,-24,]),'relop_or':([113,137,138,139,140,141,142,146,148,149,150,151,182,213,214,215,216,217,218,222,223,],[-98,-42,-31,-90,-97,-28,-93,189,-91,-92,-89,-81,-88,-32,-30,-29,-39,-40,-41,-82,-83,]),'dataframe':([0,1,3,4,6,10,31,49,57,104,232,],[-97,7,-99,-47,7,-46,-94,7,7,-25,-24,]),',':([24,32,33,34,40,62,67,106,113,133,137,139,140,141,142,148,149,150,151,154,155,157,169,171,182,196,197,214,215,216,217,218,222,223,224,227,230,239,248,],[-97,39,-105,-97,46,105,109,129,-98,-97,-42,-90,-97,-28,-93,-91,-92,-89,-81,-97,-97,199,209,210,-88,225,226,-30,-29,-39,-40,-41,-82,-83,237,240,-80,-97,255,]),'char':([0,1,3,4,6,10,11,13,15,19,31,48,49,54,57,104,109,117,168,195,208,232,],[-97,8,-99,-47,8,-46,-68,8,-67,8,-94,8,8,8,8,-25,8,-8,-45,-9,-44,-24,]),'relop_equals':([113,137,138,139,140,141,142,148,149,150,151,182,214,215,216,217,218,222,223,],[-98,-42,176,-90,-97,-28,-93,-91,-92,-89,-81,-88,-30,-29,-39,-40,-41,-82,-83,]),'relop_and':([113,137,138,139,140,141,142,146,148,149,150,151,182,213,214,215,216,217,218,222,223,],[-98,-42,-31,-90,-97,-28,-93,190,-91,-92,-89,-81,-88,-32,-30,-29,-39,-40,-41,-82,-83,]),'relop_notequal':([113,137,138,139,140,141,142,148,149,150,151,182,214,215,216,217,218,222,223,],[-98,-42,178,-90,-97,-28,-93,-91,-92,-89,-81,-88,-30,-29,-39,-40,-41,-82,-83,]),'null':([114,116,124,135,136,143,144,145,175,176,177,178,179,180,181,183,184,186,187,188,189,190,192,193,194,237,240,242,250,255,],[142,142,142,142,142,142,-97,-97,-35,-37,-36,-38,142,-33,-34,142,142,-104,142,142,142,142,142,142,142,142,142,142,142,142,]),'id':([4,5,8,9,10,12,14,25,29,31,35,39,49,56,57,58,59,68,70,71,72,73,74,75,78,79,80,81,83,84,85,87,88,89,90,92,93,95,96,99,100,101,102,104,110,114,116,117,118,120,122,124,125,135,136,143,144,145,163,165,170,175,176,177,178,179,180,181,183,184,186,187,188,189,190,192,193,194,195,198,199,201,204,205,209,212,221,225,226,228,232,235,237,240,242,245,250,252,254,255,259,261,264,],[-47,-84,-86,-87,-46,-85,24,34,36,-94,41,24,-97,67,-97,76,-11,-10,-64,111,-71,-62,-74,-49,-61,-6,-63,115,-72,-22,-7,76,-50,-73,-60,121,-76,-65,123,-23,125,127,-75,-25,133,140,140,-8,154,155,158,140,161,140,140,140,-97,-97,-54,-55,-59,-35,-37,-36,-38,140,-33,-34,140,140,-104,140,140,140,140,140,140,140,-9,-56,158,-57,-58,230,233,-3,-18,161,239,-48,-24,-14,140,140,140,-19,140,-4,-5,140,-53,-20,-21,]),'if':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,77,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,77,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'cte_int':([114,116,124,135,136,143,144,145,175,176,177,178,179,180,181,183,184,186,187,188,189,190,192,193,194,237,240,242,250,255,],[139,139,139,139,139,139,-97,-97,-35,-37,-36,-38,139,-33,-34,139,139,-104,139,139,139,139,139,139,139,139,139,139,139,139,]),'relop_lsequal':([113,137,138,139,140,141,142,148,149,150,151,182,214,215,216,217,218,222,223,],[-98,-42,175,-90,-97,-28,-93,-91,-92,-89,-81,-88,-30,-29,-39,-40,-41,-82,-83,]),')':([52,55,64,65,66,67,103,107,113,132,135,137,138,139,140,141,142,146,147,148,149,150,151,160,166,171,172,173,182,185,210,213,214,215,216,217,218,219,220,222,223,234,238,249,251,257,258,260,262,],[61,-97,-97,108,-102,-52,-43,130,-98,-51,-97,-42,-31,-90,-97,-28,-93,-77,191,-91,-92,-89,-81,202,207,-15,-17,211,-88,216,-16,-32,-30,-29,-39,-40,-41,-79,-78,-82,-83,244,247,256,258,262,-1,263,-2,]),'(':([7,16,17,36,41,42,43,47,69,76,77,86,91,94,97,112,113,114,116,124,135,136,143,175,176,177,178,179,180,181,183,184,189,190,192,193,194,231,237,241,242,250,],[-97,25,-103,-97,-97,-101,48,54,110,-97,114,118,120,122,124,135,-98,143,143,143,143,143,143,-35,-37,-36,-38,143,-33,-34,143,143,143,143,143,143,143,242,143,250,143,143,]),'+':([113,114,116,124,135,136,137,139,140,141,142,143,148,149,150,151,175,176,177,178,179,180,181,182,183,184,189,190,192,193,194,216,217,218,222,223,237,242,250,],[-98,144,144,144,144,144,-42,-90,-97,184,-93,144,-91,-92,-89,-81,-35,-37,-36,-38,144,-33,-34,-88,144,144,144,144,144,144,144,-39,-40,-41,-82,-83,144,144,144,]),'*':([113,137,139,140,142,148,149,150,151,182,216,217,218,],[-98,-42,-90,-97,-93,-91,-92,-89,192,-88,-39,-40,-41,]),'-':([113,114,116,124,135,136,137,139,140,141,142,143,148,149,150,151,175,176,177,178,179,180,181,182,183,184,189,190,192,193,194,216,217,218,222,223,237,242,250,],[-98,145,145,145,145,145,-42,-90,-97,183,-93,145,-91,-92,-89,-81,-35,-37,-36,-38,145,-33,-34,-88,145,145,145,145,145,145,145,-39,-40,-41,-82,-83,145,145,145,]),'while':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,97,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,97,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'/':([113,137,139,140,142,148,149,150,151,182,216,217,218,],[-98,-42,-90,-97,-93,-91,-92,-89,193,-88,-39,-40,-41,]),'.':([51,113,127,161,164,203,233,243,],[60,-98,-97,-97,206,229,-97,206,]),';':([23,24,32,33,45,61,111,113,121,123,126,128,134,137,139,140,141,142,148,149,150,151,156,159,162,174,182,207,211,214,215,216,217,218,222,223,230,244,247,253,256,258,262,263,],[31,-97,-96,-105,-95,104,-97,-98,-97,-97,163,165,170,-42,-90,-97,-28,-93,-91,-92,-89,-81,198,201,204,212,-88,232,235,-30,-29,-39,-40,-41,-82,-83,-80,252,254,259,261,-1,-2,264,]),'main':([0,1,3,4,6,10,11,13,15,18,19,22,26,31,104,117,168,195,208,232,],[-97,-97,-99,-47,-97,-46,-68,-97,-67,-70,-97,30,-69,-94,-25,-8,-45,-9,-44,-24,]),'=':([76,112,113,],[-97,136,-98,]),'<':([113,137,138,139,140,141,142,148,149,150,151,182,214,215,216,217,218,222,223,],[-98,-42,180,-90,-97,-28,-93,-91,-92,-89,-81,-88,-30,-29,-39,-40,-41,-82,-83,]),'printRow':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,100,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,100,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'return':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,82,83,84,85,87,88,89,90,93,95,98,99,102,104,117,119,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,-97,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,116,-72,-22,-7,-97,-50,-73,-60,-76,-65,-13,-23,-75,-25,-8,-12,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'string':([0,1,3,4,6,10,11,13,15,19,31,48,49,54,57,104,109,117,168,195,208,232,],[-97,9,-99,-47,9,-46,-68,9,-67,9,-94,9,9,9,9,-25,9,-8,-45,-9,-44,-24,]),'void':([0,1,3,4,6,10,11,13,15,19,31,104,117,168,195,208,232,],[-97,-97,-99,-47,-97,-46,-68,20,-67,20,-94,-25,-8,-45,-9,-44,-24,]),'else':([117,195,221,],[-8,-9,236,]),'>':([113,137,138,139,140,141,142,148,149,150,151,182,214,215,216,217,218,222,223,],[-98,-42,181,-90,-97,-28,-93,-91,-92,-89,-81,-88,-30,-29,-39,-40,-41,-82,-83,]),'func':([5,8,9,12,20,21,27,28,],[-84,-86,-87,-85,-97,29,35,-106,]),'cte_char':([114,116,124,135,136,143,144,145,175,176,177,178,179,180,181,183,184,186,187,188,189,190,192,193,194,237,240,242,250,255,],[148,148,148,148,148,148,-97,-97,-35,-37,-36,-38,148,-33,-34,148,148,-104,148,148,148,148,148,148,148,148,148,148,148,148,]),'[':([46,113,115,152,],[53,-98,-97,194,]),']':([62,63,105,113,137,139,140,141,142,148,149,150,151,182,214,215,216,217,218,222,223,246,],[-27,106,-26,-98,-42,-90,-97,-28,-93,-91,-92,-89,-81,-88,-30,-29,-39,-40,-41,-82,-83,253,]),'$':([113,127,158,164,200,],[-98,-97,-97,205,205,]),'cte_string':([46,53,114,116,124,129,135,136,143,144,145,175,176,177,178,179,180,181,183,184,186,187,188,189,190,192,193,194,237,240,242,250,255,],[51,62,149,149,149,51,149,149,149,-97,-97,-35,-37,-36,-38,149,-33,-34,149,149,-104,149,149,149,149,149,149,149,149,149,149,149,149,]),':':([30,37,38,108,130,],[-97,-100,44,131,167,]),'correlate':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,91,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,91,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'row':([206,],[231,]),'printData':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,92,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,92,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'correlateHeaders':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,94,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,94,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'cte_float':([114,116,124,135,136,143,144,145,175,176,177,178,179,180,181,183,184,186,187,188,189,190,192,193,194,237,240,242,250,255,],[150,150,150,150,150,150,-97,-97,-35,-37,-36,-38,150,-33,-34,150,150,-104,150,150,150,150,150,150,150,150,150,150,150,150,]),'col':([229,],[241,]),'printCell':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,81,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,81,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'printHeaders':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,96,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,96,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'rbind':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,86,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,86,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'{':([44,131,167,191,202,236,],[49,49,49,49,49,49,]),'$end':([2,50,117,195,],[0,-66,-8,-9,]),'}':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,82,83,84,85,87,88,89,90,93,95,98,99,102,104,113,117,119,137,139,140,141,142,148,149,150,151,153,163,165,170,182,195,198,201,204,212,214,215,216,217,218,221,222,223,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,-97,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,117,-72,-22,-7,-97,-50,-73,-60,-76,-65,-13,-23,-75,-25,-98,-8,-12,-42,-90,-97,-28,-93,-91,-92,-89,-81,195,-54,-55,-59,-88,-9,-56,-57,-58,-3,-30,-29,-39,-40,-41,-18,-82,-83,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),'printCol':([4,10,31,49,57,58,59,68,70,72,73,74,75,78,79,80,83,84,85,87,88,89,90,93,95,99,102,104,117,163,165,170,195,198,201,204,212,221,228,232,235,245,252,254,259,261,264,],[-47,-46,-94,-97,-97,101,-11,-10,-64,-71,-62,-74,-49,-61,-6,-63,-72,-22,-7,101,-50,-73,-60,-76,-65,-23,-75,-25,-8,-54,-55,-59,-9,-56,-57,-58,-3,-18,-48,-24,-14,-19,-4,-5,-53,-20,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'SA_NEW_DF':([7,],[16,]),'VARS':([1,6,49,57,],[4,4,4,4,]),'FILE_INPUT':([46,129,],[52,166,]),'PRINT_DATA':([58,87,],[73,73,]),'INSTANTIATE':([1,6,49,57,],[6,6,57,57,]),'PRINT_ROW':([58,87,],[95,95,]),'PROGRAM':([0,],[2,]),'EXP':([114,116,124,135,136,143,179,183,184,189,190,194,237,242,250,],[138,153,138,171,174,138,213,214,215,138,138,224,246,251,257,]),'PRINT':([58,87,],[74,74,]),'BINDINGS':([58,87,],[75,75,]),'BLOCK_STM':([58,87,],[82,119,]),'BLOCK':([44,131,167,191,202,236,],[50,168,208,221,228,245,]),'PRINT_TAGS':([58,87,],[78,78,]),'TERM':([114,116,124,135,136,143,179,183,184,189,190,192,193,194,237,242,250,],[141,141,141,141,141,141,141,141,141,141,141,222,223,141,141,141,141,]),'PARAMETERS':([48,54,109,],[55,64,132,]),'SA_VOID_FUNCTION':([20,],[27,]),'BLOCK_INST':([49,57,],[58,68,]),'CREATE_DF':([1,6,49,57,],[10,10,10,10,]),'SA_FUNCTION_PARAMS':([55,64,],[65,107,]),'PRINT_HEADERS':([58,87,],[80,80,]),'ASSIGNMENT':([58,87,],[72,72,]),'SA_NEW_SIGN':([144,145,],[187,188,]),'CREATE_DF_TAGS':([53,],[63,]),'OPERATION':([58,87,],[89,89,]),'EXPRESSION':([114,124,143,189,190,],[146,146,185,219,220,]),'empty':([0,1,6,7,13,19,20,24,30,34,36,41,49,55,57,58,64,76,87,111,115,121,123,127,133,135,140,144,145,154,155,158,161,233,239,],[3,11,11,17,18,18,28,33,37,33,42,42,59,66,59,98,66,113,98,113,113,113,113,113,113,172,113,186,186,113,113,113,113,113,113,]),'CORR_HEADERS':([58,87,],[84,84,]),'FUNCTION':([13,19,],[19,19,]),'VARS_ID':([14,39,],[23,45,]),'BIND_COLS':([58,87,],[85,85,]),'SA_FIND_ID':([76,111,115,121,123,127,133,140,154,155,158,161,233,239,],[112,134,152,156,159,164,169,182,196,197,200,203,243,248,]),'SUPER_EXPRESSION':([114,124,],[147,160,]),'SA_CREATE_VAR':([24,34,],[32,40,]),'TABLE_HEADER':([101,122,199,],[126,157,227,]),'VAR_CTE':([114,116,124,135,136,143,179,183,184,187,188,189,190,192,193,194,237,240,242,250,255,],[137,137,137,137,137,137,137,137,137,217,218,137,137,137,137,137,137,249,137,137,260,]),'CORR':([58,87,],[99,99,]),'PRINT_CELL':([58,87,],[70,70,]),'CORRELATION':([58,87,],[88,88,]),'CONDITION':([58,87,],[83,83,]),'EXPRESSION_SYM':([138,],[179,]),'PRINT_COL':([58,87,],[90,90,]),'BIND_ROWS':([58,87,],[79,79,]),'CALLFUNC':([58,87,],[93,93,]),'PROGRAM_VARS':([1,6,],[13,15,]),'SA_PROGRAM_START':([0,],[1,]),'STATEMENT':([58,87,],[87,87,]),'SA_NEW_FUNCTION':([36,41,],[43,47,]),'FACTOR':([114,116,124,135,136,143,179,183,184,189,190,192,193,194,237,242,250,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'SA_MAIN_START':([30,],[38,]),'CALLFUNC_PARAMS':([135,],[173,]),'ACCESS_COL':([101,209,],[128,234,]),'TYPE':([1,6,13,19,48,49,54,57,109,],[14,14,21,21,56,14,56,14,56,]),'ACCESS_ROW':([125,225,],[162,238,]),'LOOP':([58,87,],[102,102,]),'PROGRAM_FUNCTIONS':([13,19,],[22,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('ACCESS_COL -> id SA_FIND_ID . row ( EXP )','ACCESS_COL',7,'p_ACCESS_COL','Galton-Snake.py',124),
  ('ACCESS_ROW -> id SA_FIND_ID . col ( EXP )','ACCESS_ROW',7,'p_ACCESS_ROW','Galton-Snake.py',127),
  ('ASSIGNMENT -> id SA_FIND_ID = EXP ;','ASSIGNMENT',5,'p_ASSIGNMENT','Galton-Snake.py',130),
  ('BIND_COLS -> cbind ( id SA_FIND_ID , ACCESS_COL ) ;','BIND_COLS',8,'p_BIND_COLS','Galton-Snake.py',133),
  ('BIND_ROWS -> rbind ( id SA_FIND_ID , ACCESS_ROW ) ;','BIND_ROWS',8,'p_BIND_ROWS','Galton-Snake.py',136),
  ('BINDINGS -> BIND_ROWS','BINDINGS',1,'p_BINDINGS','Galton-Snake.py',139),
  ('BINDINGS -> BIND_COLS','BINDINGS',1,'p_BINDINGS','Galton-Snake.py',140),
  ('BLOCK -> { BLOCK_INST BLOCK_STM }','BLOCK',4,'p_BLOCK','Galton-Snake.py',143),
  ('BLOCK -> { BLOCK_INST BLOCK_STM return EXP }','BLOCK',6,'p_BLOCK','Galton-Snake.py',144),
  ('BLOCK_INST -> INSTANTIATE BLOCK_INST','BLOCK_INST',2,'p_BLOCK_INST','Galton-Snake.py',147),
  ('BLOCK_INST -> empty','BLOCK_INST',1,'p_BLOCK_INST','Galton-Snake.py',148),
  ('BLOCK_STM -> STATEMENT BLOCK_STM','BLOCK_STM',2,'p_BLOCK_STM','Galton-Snake.py',151),
  ('BLOCK_STM -> empty','BLOCK_STM',1,'p_BLOCK_STM','Galton-Snake.py',152),
  ('CALLFUNC -> id SA_FIND_ID ( CALLFUNC_PARAMS ) ;','CALLFUNC',6,'p_CALLFUNC','Galton-Snake.py',155),
  ('CALLFUNC_PARAMS -> EXP','CALLFUNC_PARAMS',1,'p_CALLFUNC_PARAMS','Galton-Snake.py',158),
  ('CALLFUNC_PARAMS -> EXP ,','CALLFUNC_PARAMS',2,'p_CALLFUNC_PARAMS','Galton-Snake.py',159),
  ('CALLFUNC_PARAMS -> empty','CALLFUNC_PARAMS',1,'p_CALLFUNC_PARAMS','Galton-Snake.py',160),
  ('CONDITION -> if ( SUPER_EXPRESSION ) BLOCK','CONDITION',5,'p_CONDITION','Galton-Snake.py',163),
  ('CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK','CONDITION',7,'p_CONDITION','Galton-Snake.py',164),
  ('CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ;','CORR_HEADERS',9,'p_CORR_HEADERS','Galton-Snake.py',167),
  ('CORR -> correlate ( id SA_FIND_ID , id SA_FIND_ID , VAR_CTE ) ;','CORR',11,'p_CORR','Galton-Snake.py',170),
  ('CORRELATION -> CORR_HEADERS','CORRELATION',1,'p_CORRELATION','Galton-Snake.py',173),
  ('CORRELATION -> CORR','CORRELATION',1,'p_CORRELATION','Galton-Snake.py',174),
  ('CREATE_DF -> dataframe SA_NEW_DF ( id SA_CREATE_VAR , [ CREATE_DF_TAGS ] , FILE_INPUT ) ;','CREATE_DF',13,'p_CREATE_DF','Galton-Snake.py',177),
  ('CREATE_DF -> dataframe SA_NEW_DF ( id SA_CREATE_VAR , FILE_INPUT ) ;','CREATE_DF',9,'p_CREATE_DF','Galton-Snake.py',178),
  ('CREATE_DF_TAGS -> cte_string ,','CREATE_DF_TAGS',2,'p_CREATE_DF_TAGS','Galton-Snake.py',181),
  ('CREATE_DF_TAGS -> cte_string','CREATE_DF_TAGS',1,'p_CREATE_DF_TAGS','Galton-Snake.py',182),
  ('EXP -> TERM','EXP',1,'p_EXP','Galton-Snake.py',185),
  ('EXP -> TERM + EXP','EXP',3,'p_EXP','Galton-Snake.py',186),
  ('EXP -> TERM - EXP','EXP',3,'p_EXP','Galton-Snake.py',187),
  ('EXPRESSION -> EXP','EXPRESSION',1,'p_EXPRESSION','Galton-Snake.py',190),
  ('EXPRESSION -> EXP EXPRESSION_SYM EXP','EXPRESSION',3,'p_EXPRESSION','Galton-Snake.py',191),
  ('EXPRESSION_SYM -> <','EXPRESSION_SYM',1,'p_EXPRESSION_SYM','Galton-Snake.py',194),
  ('EXPRESSION_SYM -> >','EXPRESSION_SYM',1,'p_EXPRESSION_SYM','Galton-Snake.py',195),
  ('EXPRESSION_SYM -> relop_lsequal','EXPRESSION_SYM',1,'p_EXPRESSION_SYM','Galton-Snake.py',196),
  ('EXPRESSION_SYM -> relop_grequal','EXPRESSION_SYM',1,'p_EXPRESSION_SYM','Galton-Snake.py',197),
  ('EXPRESSION_SYM -> relop_equals','EXPRESSION_SYM',1,'p_EXPRESSION_SYM','Galton-Snake.py',198),
  ('EXPRESSION_SYM -> relop_notequal','EXPRESSION_SYM',1,'p_EXPRESSION_SYM','Galton-Snake.py',199),
  ('FACTOR -> ( EXPRESSION )','FACTOR',3,'p_FACTOR','Galton-Snake.py',202),
  ('FACTOR -> + SA_NEW_SIGN VAR_CTE','FACTOR',3,'p_FACTOR','Galton-Snake.py',203),
  ('FACTOR -> - SA_NEW_SIGN VAR_CTE','FACTOR',3,'p_FACTOR','Galton-Snake.py',204),
  ('FACTOR -> VAR_CTE','FACTOR',1,'p_FACTOR','Galton-Snake.py',205),
  ('FILE_INPUT -> cte_string . csv','FILE_INPUT',3,'p_FILE_INPUT','Galton-Snake.py',208),
  ('FUNCTION -> void SA_VOID_FUNCTION func id SA_NEW_FUNCTION ( PARAMETERS SA_FUNCTION_PARAMS ) : BLOCK','FUNCTION',11,'p_FUNCTION','Galton-Snake.py',211),
  ('FUNCTION -> TYPE func id SA_NEW_FUNCTION ( PARAMETERS SA_FUNCTION_PARAMS ) : BLOCK','FUNCTION',10,'p_FUNCTION','Galton-Snake.py',212),
  ('INSTANTIATE -> CREATE_DF','INSTANTIATE',1,'p_INSTANTIATE','Galton-Snake.py',216),
  ('INSTANTIATE -> VARS','INSTANTIATE',1,'p_INSTANTIATE','Galton-Snake.py',217),
  ('LOOP -> while ( SUPER_EXPRESSION ) BLOCK','LOOP',5,'p_LOOP','Galton-Snake.py',220),
  ('OPERATION -> BINDINGS','OPERATION',1,'p_OPERATION','Galton-Snake.py',223),
  ('OPERATION -> CORRELATION','OPERATION',1,'p_OPERATION','Galton-Snake.py',224),
  ('PARAMETERS -> TYPE id , PARAMETERS','PARAMETERS',4,'p_PARAMETERS','Galton-Snake.py',227),
  ('PARAMETERS -> TYPE id','PARAMETERS',2,'p_PARAMETERS','Galton-Snake.py',228),
  ('PRINT_CELL -> printCell id SA_FIND_ID [ EXP , EXP ] ;','PRINT_CELL',9,'p_PRINT_CELL','Galton-Snake.py',232),
  ('PRINT_COL -> printCol TABLE_HEADER ;','PRINT_COL',3,'p_PRINT_COL','Galton-Snake.py',235),
  ('PRINT_COL -> printCol ACCESS_COL ;','PRINT_COL',3,'p_PRINT_COL','Galton-Snake.py',236),
  ('PRINT_DATA -> printData id SA_FIND_ID ;','PRINT_DATA',4,'p_PRINT_DATA','Galton-Snake.py',239),
  ('PRINT_HEADERS -> printHeaders id SA_FIND_ID ;','PRINT_HEADERS',4,'p_PRINT_HEADERS','Galton-Snake.py',242),
  ('PRINT_ROW -> printRow id ACCESS_ROW ;','PRINT_ROW',4,'p_PRINT_ROW','Galton-Snake.py',245),
  ('PRINT_TAGS -> printTags id SA_FIND_ID ;','PRINT_TAGS',4,'p_PRINT_TAGS','Galton-Snake.py',248),
  ('PRINT -> PRINT_COL','PRINT',1,'p_PRINT','Galton-Snake.py',251),
  ('PRINT -> PRINT_TAGS','PRINT',1,'p_PRINT','Galton-Snake.py',252),
  ('PRINT -> PRINT_DATA','PRINT',1,'p_PRINT','Galton-Snake.py',253),
  ('PRINT -> PRINT_HEADERS','PRINT',1,'p_PRINT','Galton-Snake.py',254),
  ('PRINT -> PRINT_CELL','PRINT',1,'p_PRINT','Galton-Snake.py',255),
  ('PRINT -> PRINT_ROW','PRINT',1,'p_PRINT','Galton-Snake.py',256),
  ('PROGRAM -> SA_PROGRAM_START PROGRAM_VARS PROGRAM_FUNCTIONS main SA_MAIN_START : BLOCK','PROGRAM',7,'p_PROGRAM','Galton-Snake.py',259),
  ('PROGRAM_VARS -> INSTANTIATE PROGRAM_VARS','PROGRAM_VARS',2,'p_PROGRAM_VARS','Galton-Snake.py',263),
  ('PROGRAM_VARS -> empty','PROGRAM_VARS',1,'p_PROGRAM_VARS','Galton-Snake.py',264),
  ('PROGRAM_FUNCTIONS -> FUNCTION PROGRAM_FUNCTIONS','PROGRAM_FUNCTIONS',2,'p_PROGRAM_FUNCTIONS','Galton-Snake.py',267),
  ('PROGRAM_FUNCTIONS -> empty','PROGRAM_FUNCTIONS',1,'p_PROGRAM_FUNCTIONS','Galton-Snake.py',268),
  ('STATEMENT -> ASSIGNMENT','STATEMENT',1,'p_STATEMENT','Galton-Snake.py',271),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','Galton-Snake.py',272),
  ('STATEMENT -> OPERATION','STATEMENT',1,'p_STATEMENT','Galton-Snake.py',273),
  ('STATEMENT -> PRINT','STATEMENT',1,'p_STATEMENT','Galton-Snake.py',274),
  ('STATEMENT -> LOOP','STATEMENT',1,'p_STATEMENT','Galton-Snake.py',275),
  ('STATEMENT -> CALLFUNC','STATEMENT',1,'p_STATEMENT','Galton-Snake.py',276),
  ('SUPER_EXPRESSION -> EXPRESSION','SUPER_EXPRESSION',1,'p_SUPER_EXPRESSION','Galton-Snake.py',279),
  ('SUPER_EXPRESSION -> EXPRESSION relop_and EXPRESSION','SUPER_EXPRESSION',3,'p_SUPER_EXPRESSION','Galton-Snake.py',280),
  ('SUPER_EXPRESSION -> EXPRESSION relop_or EXPRESSION','SUPER_EXPRESSION',3,'p_SUPER_EXPRESSION','Galton-Snake.py',281),
  ('TABLE_HEADER -> id SA_FIND_ID $ id','TABLE_HEADER',4,'p_TABLE_HEADER','Galton-Snake.py',284),
  ('TERM -> FACTOR','TERM',1,'p_TERM','Galton-Snake.py',287),
  ('TERM -> FACTOR * TERM','TERM',3,'p_TERM','Galton-Snake.py',288),
  ('TERM -> FACTOR / TERM','TERM',3,'p_TERM','Galton-Snake.py',289),
  ('TYPE -> int','TYPE',1,'p_TYPE','Galton-Snake.py',292),
  ('TYPE -> float','TYPE',1,'p_TYPE','Galton-Snake.py',293),
  ('TYPE -> char','TYPE',1,'p_TYPE','Galton-Snake.py',294),
  ('TYPE -> string','TYPE',1,'p_TYPE','Galton-Snake.py',295),
  ('VAR_CTE -> id SA_FIND_ID','VAR_CTE',2,'p_VAR_CTE','Galton-Snake.py',299),
  ('VAR_CTE -> cte_float','VAR_CTE',1,'p_VAR_CTE','Galton-Snake.py',300),
  ('VAR_CTE -> cte_int','VAR_CTE',1,'p_VAR_CTE','Galton-Snake.py',301),
  ('VAR_CTE -> cte_char','VAR_CTE',1,'p_VAR_CTE','Galton-Snake.py',302),
  ('VAR_CTE -> cte_string','VAR_CTE',1,'p_VAR_CTE','Galton-Snake.py',303),
  ('VAR_CTE -> null','VAR_CTE',1,'p_VAR_CTE','Galton-Snake.py',304),
  ('VARS -> TYPE VARS_ID ;','VARS',3,'p_VARS','Galton-Snake.py',307),
  ('VARS_ID -> id SA_CREATE_VAR , VARS_ID','VARS_ID',4,'p_VARS_ID','Galton-Snake.py',310),
  ('VARS_ID -> id SA_CREATE_VAR','VARS_ID',2,'p_VARS_ID','Galton-Snake.py',311),
  ('empty -> <empty>','empty',0,'p_empty','Galton-Snake.py',314),
  ('SA_FIND_ID -> empty','SA_FIND_ID',1,'p_SA_FIND_ID','Galton-Snake.py',324),
  ('SA_PROGRAM_START -> empty','SA_PROGRAM_START',1,'p_SA_PROGRAM_START','Galton-Snake.py',331),
  ('SA_MAIN_START -> empty','SA_MAIN_START',1,'p_SA_MAIN_START','Galton-Snake.py',337),
  ('SA_NEW_FUNCTION -> empty','SA_NEW_FUNCTION',1,'p_SA_NEW_FUNCTION','Galton-Snake.py',344),
  ('SA_FUNCTION_PARAMS -> empty','SA_FUNCTION_PARAMS',1,'p_SA_FUNCTION_PARAMS','Galton-Snake.py',350),
  ('SA_NEW_DF -> empty','SA_NEW_DF',1,'p_SA_NEW_DF','Galton-Snake.py',360),
  ('SA_NEW_SIGN -> empty','SA_NEW_SIGN',1,'p_SA_NEW_SIGN','Galton-Snake.py',365),
  ('SA_CREATE_VAR -> empty','SA_CREATE_VAR',1,'p_SA_CREATE_VAR','Galton-Snake.py',370),
  ('SA_VOID_FUNCTION -> empty','SA_VOID_FUNCTION',1,'p_SA_VOID_FUNCTION','Galton-Snake.py',379),
]
