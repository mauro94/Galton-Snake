Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_VARS PROGRAM_FUNCTIONS main : BLOCK
Rule 2     ACCESS_COL -> id . row ( EXP )
Rule 3     ACCESS_ROW -> id . col ( EXP )
Rule 4     ASSIGNMENT -> id = EXP ;
Rule 5     BIND_COLS -> cbind ( id , ACCESS_COL ) ;
Rule 6     BIND_ROWS -> rbind ( id , ACCESS_ROW ) ;
Rule 7     BINDINGS -> BIND_ROWS
Rule 8     BINDINGS -> BIND_COLS
Rule 9     BLOCK -> { BLOCK_INST BLOCK_STM }
Rule 10    BLOCK -> { BLOCK_INST BLOCK_STM return EXP }
Rule 11    BLOCK_INST -> INSTANTIATE BLOCK_INST
Rule 12    BLOCK_INST -> <empty>
Rule 13    BLOCK_STM -> STATEMENT BLOCK_STM
Rule 14    BLOCK_STM -> <empty>
Rule 15    CALLFUNC -> id ( CALLFUNC_PARAMS ) ;
Rule 16    CALLFUNC_PARAMS -> EXP
Rule 17    CALLFUNC_PARAMS -> EXP ,
Rule 18    CALLFUNC_PARAMS -> <empty>
Rule 19    CONDITION -> if ( SUPER_EXPRESSION ) BLOCK
Rule 20    CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK
Rule 21    CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ;
Rule 22    CORR -> correlate ( id , id , VAR_CTE ) ;
Rule 23    CORRELATION -> CORR_HEADERS
Rule 24    CORRELATION -> CORR
Rule 25    CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ;
Rule 26    CREATE_DF -> dataframe ( id , FILE_INPUT ) ;
Rule 27    CREATE_DF_TAGS -> cte_string ,
Rule 28    CREATE_DF_TAGS -> cte_string
Rule 29    EXP -> TERM
Rule 30    EXP -> TERM + EXP
Rule 31    EXP -> TERM - EXP
Rule 32    EXPRESSION -> EXP
Rule 33    EXPRESSION -> EXP EXPRESSION_SYM EXP
Rule 34    EXPRESSION_SYM -> <
Rule 35    EXPRESSION_SYM -> >
Rule 36    EXPRESSION_SYM -> relop_lsequal
Rule 37    EXPRESSION_SYM -> relop_grequal
Rule 38    EXPRESSION_SYM -> relop_equals
Rule 39    EXPRESSION_SYM -> relop_notequal
Rule 40    FACTOR -> ( EXPRESSION )
Rule 41    FACTOR -> + VAR_CTE
Rule 42    FACTOR -> - VAR_CTE
Rule 43    FACTOR -> VAR_CTE
Rule 44    FILE_INPUT -> cte_string . csv
Rule 45    FUNCTION -> void func id ( PARAMETERS ) : BLOCK
Rule 46    FUNCTION -> TYPE func id ( PARAMETERS ) : BLOCK
Rule 47    INSTANTIATE -> CREATE_DF
Rule 48    INSTANTIATE -> VARS
Rule 49    LOOP -> while ( SUPER_EXPRESSION ) BLOCK
Rule 50    OPERATION -> BINDINGS
Rule 51    OPERATION -> CORRELATION
Rule 52    OPERATION -> CALLFUNC
Rule 53    PARAMETERS -> TYPE id , PARAMETERS
Rule 54    PARAMETERS -> TYPE id
Rule 55    PRINT_CELL -> printCell id [ EXP , EXP ] ;
Rule 56    PRINT_COL -> printCol TABLE_HEADER ;
Rule 57    PRINT_COL -> printCol ACCESS_COL ;
Rule 58    PRINT_DATA -> printData id ;
Rule 59    PRINT_HEADERS -> printHeaders id ;
Rule 60    PRINT_ROW -> printRow id ACCESS_ROW ;
Rule 61    PRINT_TAGS -> printTags id ;
Rule 62    PRINT -> PRINT_COL
Rule 63    PRINT -> PRINT_TAGS
Rule 64    PRINT -> PRINT_DATA
Rule 65    PRINT -> PRINT_HEADERS
Rule 66    PRINT -> PRINT_CELL
Rule 67    PRINT -> PRINT_ROW
Rule 68    PROGRAM_VARS -> INSTANTIATE PROGRAM_VARS
Rule 69    PROGRAM_VARS -> <empty>
Rule 70    PROGRAM_FUNCTIONS -> FUNCTION PROGRAM_FUNCTIONS
Rule 71    PROGRAM_FUNCTIONS -> <empty>
Rule 72    STATEMENT -> ASSIGNMENT
Rule 73    STATEMENT -> CONDITION
Rule 74    STATEMENT -> OPERATION
Rule 75    STATEMENT -> PRINT
Rule 76    STATEMENT -> LOOP
Rule 77    STATEMENT -> CALLFUNC
Rule 78    SUPER_EXPRESSION -> EXPRESSION
Rule 79    SUPER_EXPRESSION -> EXPRESSION relop_and EXPRESSION
Rule 80    SUPER_EXPRESSION -> EXPRESSION relop_or EXPRESSION
Rule 81    TABLE_HEADER -> id $ id
Rule 82    TERM -> FACTOR
Rule 83    TERM -> FACTOR * TERM
Rule 84    TERM -> FACTOR / TERM
Rule 85    TYPE -> int
Rule 86    TYPE -> float
Rule 87    TYPE -> char
Rule 88    TYPE -> string
Rule 89    VAR_CTE -> id
Rule 90    VAR_CTE -> cte_float
Rule 91    VAR_CTE -> cte_int
Rule 92    VAR_CTE -> cte_char
Rule 93    VAR_CTE -> cte_string
Rule 94    VAR_CTE -> null
Rule 95    VARS -> TYPE VARS_ID ;
Rule 96    VARS_ID -> id , VARS_ID
Rule 97    VARS_ID -> id

Terminals, with rules where they appear

$                    : 81
(                    : 2 3 5 6 15 19 20 21 22 25 26 40 45 46 49
)                    : 2 3 5 6 15 19 20 21 22 25 26 40 45 46 49
*                    : 83
+                    : 30 41
,                    : 5 6 17 21 21 22 22 25 25 26 27 53 55 96
-                    : 31 42
.                    : 2 3 44
/                    : 84
:                    : 1 45 46
;                    : 4 5 6 15 21 22 25 26 55 56 57 58 59 60 61 95
<                    : 34
=                    : 4
>                    : 35
[                    : 25 55
]                    : 25 55
cbind                : 5
char                 : 87
col                  : 3
correlate            : 22
correlateHeaders     : 21
csv                  : 44
cte_char             : 92
cte_float            : 90
cte_int              : 91
cte_string           : 27 28 44 93
dataframe            : 25 26
else                 : 20
error                : 
float                : 86
func                 : 45 46
id                   : 2 3 4 5 6 15 22 22 25 26 45 46 53 54 55 58 59 60 61 81 81 89 96 97
if                   : 19 20
int                  : 85
main                 : 1
null                 : 94
printCell            : 55
printCol             : 56 57
printData            : 58
printHeaders         : 59
printRow             : 60
printTags            : 61
rbind                : 6
relop_and            : 79
relop_equals         : 38
relop_grequal        : 37
relop_lsequal        : 36
relop_notequal       : 39
relop_or             : 80
return               : 10
row                  : 2
string               : 88
void                 : 45
while                : 49
{                    : 9 10
}                    : 9 10

Nonterminals, with rules where they appear

ACCESS_COL           : 5 57
ACCESS_ROW           : 6 60
ASSIGNMENT           : 72
BINDINGS             : 50
BIND_COLS            : 8
BIND_ROWS            : 7
BLOCK                : 1 19 20 20 45 46 49
BLOCK_INST           : 9 10 11
BLOCK_STM            : 9 10 13
CALLFUNC             : 52 77
CALLFUNC_PARAMS      : 15
CONDITION            : 73
CORR                 : 24
CORRELATION          : 51
CORR_HEADERS         : 23
CREATE_DF            : 47
CREATE_DF_TAGS       : 25
EXP                  : 2 3 4 10 16 17 30 31 32 33 33 55 55
EXPRESSION           : 40 78 79 79 80 80
EXPRESSION_SYM       : 33
FACTOR               : 82 83 84
FILE_INPUT           : 25 26
FUNCTION             : 70
INSTANTIATE          : 11 68
LOOP                 : 76
OPERATION            : 74
PARAMETERS           : 45 46 53
PRINT                : 75
PRINT_CELL           : 66
PRINT_COL            : 62
PRINT_DATA           : 64
PRINT_HEADERS        : 65
PRINT_ROW            : 67
PRINT_TAGS           : 63
PROGRAM              : 0
PROGRAM_FUNCTIONS    : 1 70
PROGRAM_VARS         : 1 68
STATEMENT            : 13
SUPER_EXPRESSION     : 19 20 49
TABLE_HEADER         : 21 21 56
TERM                 : 29 30 31 83 84
TYPE                 : 46 53 54 95
VARS                 : 48
VARS_ID              : 95 96
VAR_CTE              : 21 22 41 42 43

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_VARS PROGRAM_FUNCTIONS main : BLOCK
    (68) PROGRAM_VARS -> . INSTANTIATE PROGRAM_VARS
    (69) PROGRAM_VARS -> .
    (47) INSTANTIATE -> . CREATE_DF
    (48) INSTANTIATE -> . VARS
    (25) CREATE_DF -> . dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ;
    (26) CREATE_DF -> . dataframe ( id , FILE_INPUT ) ;
    (95) VARS -> . TYPE VARS_ID ;
    (85) TYPE -> . int
    (86) TYPE -> . float
    (87) TYPE -> . char
    (88) TYPE -> . string

  ! shift/reduce conflict for int resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for char resolved as shift
  ! shift/reduce conflict for string resolved as shift
    void            reduce using rule 69 (PROGRAM_VARS -> .)
    main            reduce using rule 69 (PROGRAM_VARS -> .)
    dataframe       shift and go to state 4
    int             shift and go to state 2
    float           shift and go to state 9
    char            shift and go to state 5
    string          shift and go to state 7

  ! int             [ reduce using rule 69 (PROGRAM_VARS -> .) ]
  ! float           [ reduce using rule 69 (PROGRAM_VARS -> .) ]
  ! char            [ reduce using rule 69 (PROGRAM_VARS -> .) ]
  ! string          [ reduce using rule 69 (PROGRAM_VARS -> .) ]

    VARS                           shift and go to state 1
    INSTANTIATE                    shift and go to state 3
    PROGRAM_VARS                   shift and go to state 10
    CREATE_DF                      shift and go to state 8
    PROGRAM                        shift and go to state 6
    TYPE                           shift and go to state 11

state 1

    (48) INSTANTIATE -> VARS .

    dataframe       reduce using rule 48 (INSTANTIATE -> VARS .)
    int             reduce using rule 48 (INSTANTIATE -> VARS .)
    float           reduce using rule 48 (INSTANTIATE -> VARS .)
    char            reduce using rule 48 (INSTANTIATE -> VARS .)
    string          reduce using rule 48 (INSTANTIATE -> VARS .)
    void            reduce using rule 48 (INSTANTIATE -> VARS .)
    main            reduce using rule 48 (INSTANTIATE -> VARS .)
    id              reduce using rule 48 (INSTANTIATE -> VARS .)
    if              reduce using rule 48 (INSTANTIATE -> VARS .)
    while           reduce using rule 48 (INSTANTIATE -> VARS .)
    printCol        reduce using rule 48 (INSTANTIATE -> VARS .)
    printTags       reduce using rule 48 (INSTANTIATE -> VARS .)
    printData       reduce using rule 48 (INSTANTIATE -> VARS .)
    printHeaders    reduce using rule 48 (INSTANTIATE -> VARS .)
    printCell       reduce using rule 48 (INSTANTIATE -> VARS .)
    printRow        reduce using rule 48 (INSTANTIATE -> VARS .)
    rbind           reduce using rule 48 (INSTANTIATE -> VARS .)
    cbind           reduce using rule 48 (INSTANTIATE -> VARS .)
    correlateHeaders reduce using rule 48 (INSTANTIATE -> VARS .)
    correlate       reduce using rule 48 (INSTANTIATE -> VARS .)
    }               reduce using rule 48 (INSTANTIATE -> VARS .)
    return          reduce using rule 48 (INSTANTIATE -> VARS .)


state 2

    (85) TYPE -> int .

    id              reduce using rule 85 (TYPE -> int .)
    func            reduce using rule 85 (TYPE -> int .)


state 3

    (68) PROGRAM_VARS -> INSTANTIATE . PROGRAM_VARS
    (68) PROGRAM_VARS -> . INSTANTIATE PROGRAM_VARS
    (69) PROGRAM_VARS -> .
    (47) INSTANTIATE -> . CREATE_DF
    (48) INSTANTIATE -> . VARS
    (25) CREATE_DF -> . dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ;
    (26) CREATE_DF -> . dataframe ( id , FILE_INPUT ) ;
    (95) VARS -> . TYPE VARS_ID ;
    (85) TYPE -> . int
    (86) TYPE -> . float
    (87) TYPE -> . char
    (88) TYPE -> . string

  ! shift/reduce conflict for int resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for char resolved as shift
  ! shift/reduce conflict for string resolved as shift
    void            reduce using rule 69 (PROGRAM_VARS -> .)
    main            reduce using rule 69 (PROGRAM_VARS -> .)
    dataframe       shift and go to state 4
    int             shift and go to state 2
    float           shift and go to state 9
    char            shift and go to state 5
    string          shift and go to state 7

  ! int             [ reduce using rule 69 (PROGRAM_VARS -> .) ]
  ! float           [ reduce using rule 69 (PROGRAM_VARS -> .) ]
  ! char            [ reduce using rule 69 (PROGRAM_VARS -> .) ]
  ! string          [ reduce using rule 69 (PROGRAM_VARS -> .) ]

    VARS                           shift and go to state 1
    INSTANTIATE                    shift and go to state 3
    PROGRAM_VARS                   shift and go to state 12
    CREATE_DF                      shift and go to state 8
    TYPE                           shift and go to state 11

state 4

    (25) CREATE_DF -> dataframe . ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ;
    (26) CREATE_DF -> dataframe . ( id , FILE_INPUT ) ;

    (               shift and go to state 13


state 5

    (87) TYPE -> char .

    id              reduce using rule 87 (TYPE -> char .)
    func            reduce using rule 87 (TYPE -> char .)


state 6

    (0) S' -> PROGRAM .



state 7

    (88) TYPE -> string .

    id              reduce using rule 88 (TYPE -> string .)
    func            reduce using rule 88 (TYPE -> string .)


state 8

    (47) INSTANTIATE -> CREATE_DF .

    dataframe       reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    int             reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    float           reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    char            reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    string          reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    void            reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    main            reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    id              reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    if              reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    while           reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    printCol        reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    printTags       reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    printData       reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    printHeaders    reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    printCell       reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    printRow        reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    rbind           reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    cbind           reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    correlateHeaders reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    correlate       reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    }               reduce using rule 47 (INSTANTIATE -> CREATE_DF .)
    return          reduce using rule 47 (INSTANTIATE -> CREATE_DF .)


state 9

    (86) TYPE -> float .

    id              reduce using rule 86 (TYPE -> float .)
    func            reduce using rule 86 (TYPE -> float .)


state 10

    (1) PROGRAM -> PROGRAM_VARS . PROGRAM_FUNCTIONS main : BLOCK
    (70) PROGRAM_FUNCTIONS -> . FUNCTION PROGRAM_FUNCTIONS
    (71) PROGRAM_FUNCTIONS -> .
    (45) FUNCTION -> . void func id ( PARAMETERS ) : BLOCK
    (46) FUNCTION -> . TYPE func id ( PARAMETERS ) : BLOCK
    (85) TYPE -> . int
    (86) TYPE -> . float
    (87) TYPE -> . char
    (88) TYPE -> . string

    main            reduce using rule 71 (PROGRAM_FUNCTIONS -> .)
    void            shift and go to state 15
    int             shift and go to state 2
    float           shift and go to state 9
    char            shift and go to state 5
    string          shift and go to state 7

    FUNCTION                       shift and go to state 14
    TYPE                           shift and go to state 16
    PROGRAM_FUNCTIONS              shift and go to state 17

state 11

    (95) VARS -> TYPE . VARS_ID ;
    (96) VARS_ID -> . id , VARS_ID
    (97) VARS_ID -> . id

    id              shift and go to state 19

    VARS_ID                        shift and go to state 18

state 12

    (68) PROGRAM_VARS -> INSTANTIATE PROGRAM_VARS .

    void            reduce using rule 68 (PROGRAM_VARS -> INSTANTIATE PROGRAM_VARS .)
    int             reduce using rule 68 (PROGRAM_VARS -> INSTANTIATE PROGRAM_VARS .)
    float           reduce using rule 68 (PROGRAM_VARS -> INSTANTIATE PROGRAM_VARS .)
    char            reduce using rule 68 (PROGRAM_VARS -> INSTANTIATE PROGRAM_VARS .)
    string          reduce using rule 68 (PROGRAM_VARS -> INSTANTIATE PROGRAM_VARS .)
    main            reduce using rule 68 (PROGRAM_VARS -> INSTANTIATE PROGRAM_VARS .)


state 13

    (25) CREATE_DF -> dataframe ( . id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ;
    (26) CREATE_DF -> dataframe ( . id , FILE_INPUT ) ;

    id              shift and go to state 20


state 14

    (70) PROGRAM_FUNCTIONS -> FUNCTION . PROGRAM_FUNCTIONS
    (70) PROGRAM_FUNCTIONS -> . FUNCTION PROGRAM_FUNCTIONS
    (71) PROGRAM_FUNCTIONS -> .
    (45) FUNCTION -> . void func id ( PARAMETERS ) : BLOCK
    (46) FUNCTION -> . TYPE func id ( PARAMETERS ) : BLOCK
    (85) TYPE -> . int
    (86) TYPE -> . float
    (87) TYPE -> . char
    (88) TYPE -> . string

    main            reduce using rule 71 (PROGRAM_FUNCTIONS -> .)
    void            shift and go to state 15
    int             shift and go to state 2
    float           shift and go to state 9
    char            shift and go to state 5
    string          shift and go to state 7

    FUNCTION                       shift and go to state 14
    TYPE                           shift and go to state 16
    PROGRAM_FUNCTIONS              shift and go to state 21

state 15

    (45) FUNCTION -> void . func id ( PARAMETERS ) : BLOCK

    func            shift and go to state 22


state 16

    (46) FUNCTION -> TYPE . func id ( PARAMETERS ) : BLOCK

    func            shift and go to state 23


state 17

    (1) PROGRAM -> PROGRAM_VARS PROGRAM_FUNCTIONS . main : BLOCK

    main            shift and go to state 24


state 18

    (95) VARS -> TYPE VARS_ID . ;

    ;               shift and go to state 25


state 19

    (96) VARS_ID -> id . , VARS_ID
    (97) VARS_ID -> id .

    ,               shift and go to state 26
    ;               reduce using rule 97 (VARS_ID -> id .)


state 20

    (25) CREATE_DF -> dataframe ( id . , [ CREATE_DF_TAGS ] , FILE_INPUT ) ;
    (26) CREATE_DF -> dataframe ( id . , FILE_INPUT ) ;

    ,               shift and go to state 27


state 21

    (70) PROGRAM_FUNCTIONS -> FUNCTION PROGRAM_FUNCTIONS .

    main            reduce using rule 70 (PROGRAM_FUNCTIONS -> FUNCTION PROGRAM_FUNCTIONS .)


state 22

    (45) FUNCTION -> void func . id ( PARAMETERS ) : BLOCK

    id              shift and go to state 28


state 23

    (46) FUNCTION -> TYPE func . id ( PARAMETERS ) : BLOCK

    id              shift and go to state 29


state 24

    (1) PROGRAM -> PROGRAM_VARS PROGRAM_FUNCTIONS main . : BLOCK

    :               shift and go to state 30


state 25

    (95) VARS -> TYPE VARS_ID ; .

    dataframe       reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    int             reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    float           reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    char            reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    string          reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    id              reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    if              reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    while           reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    printCol        reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    printTags       reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    printData       reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    printHeaders    reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    printCell       reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    printRow        reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    rbind           reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    cbind           reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    correlateHeaders reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    correlate       reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    }               reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    return          reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    void            reduce using rule 95 (VARS -> TYPE VARS_ID ; .)
    main            reduce using rule 95 (VARS -> TYPE VARS_ID ; .)


state 26

    (96) VARS_ID -> id , . VARS_ID
    (96) VARS_ID -> . id , VARS_ID
    (97) VARS_ID -> . id

    id              shift and go to state 19

    VARS_ID                        shift and go to state 31

state 27

    (25) CREATE_DF -> dataframe ( id , . [ CREATE_DF_TAGS ] , FILE_INPUT ) ;
    (26) CREATE_DF -> dataframe ( id , . FILE_INPUT ) ;
    (44) FILE_INPUT -> . cte_string . csv

    [               shift and go to state 34
    cte_string      shift and go to state 32

    FILE_INPUT                     shift and go to state 33

state 28

    (45) FUNCTION -> void func id . ( PARAMETERS ) : BLOCK

    (               shift and go to state 35


state 29

    (46) FUNCTION -> TYPE func id . ( PARAMETERS ) : BLOCK

    (               shift and go to state 36


state 30

    (1) PROGRAM -> PROGRAM_VARS PROGRAM_FUNCTIONS main : . BLOCK
    (9) BLOCK -> . { BLOCK_INST BLOCK_STM }
    (10) BLOCK -> . { BLOCK_INST BLOCK_STM return EXP }

    {               shift and go to state 37

    BLOCK                          shift and go to state 38

state 31

    (96) VARS_ID -> id , VARS_ID .

    ;               reduce using rule 96 (VARS_ID -> id , VARS_ID .)


state 32

    (44) FILE_INPUT -> cte_string . . csv

    .               shift and go to state 39


state 33

    (26) CREATE_DF -> dataframe ( id , FILE_INPUT . ) ;

    )               shift and go to state 40


state 34

    (25) CREATE_DF -> dataframe ( id , [ . CREATE_DF_TAGS ] , FILE_INPUT ) ;
    (27) CREATE_DF_TAGS -> . cte_string ,
    (28) CREATE_DF_TAGS -> . cte_string

    cte_string      shift and go to state 41

    CREATE_DF_TAGS                 shift and go to state 42

state 35

    (45) FUNCTION -> void func id ( . PARAMETERS ) : BLOCK
    (53) PARAMETERS -> . TYPE id , PARAMETERS
    (54) PARAMETERS -> . TYPE id
    (85) TYPE -> . int
    (86) TYPE -> . float
    (87) TYPE -> . char
    (88) TYPE -> . string

    int             shift and go to state 2
    float           shift and go to state 9
    char            shift and go to state 5
    string          shift and go to state 7

    TYPE                           shift and go to state 44
    PARAMETERS                     shift and go to state 43

state 36

    (46) FUNCTION -> TYPE func id ( . PARAMETERS ) : BLOCK
    (53) PARAMETERS -> . TYPE id , PARAMETERS
    (54) PARAMETERS -> . TYPE id
    (85) TYPE -> . int
    (86) TYPE -> . float
    (87) TYPE -> . char
    (88) TYPE -> . string

    int             shift and go to state 2
    float           shift and go to state 9
    char            shift and go to state 5
    string          shift and go to state 7

    TYPE                           shift and go to state 44
    PARAMETERS                     shift and go to state 45

state 37

    (9) BLOCK -> { . BLOCK_INST BLOCK_STM }
    (10) BLOCK -> { . BLOCK_INST BLOCK_STM return EXP }
    (11) BLOCK_INST -> . INSTANTIATE BLOCK_INST
    (12) BLOCK_INST -> .
    (47) INSTANTIATE -> . CREATE_DF
    (48) INSTANTIATE -> . VARS
    (25) CREATE_DF -> . dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ;
    (26) CREATE_DF -> . dataframe ( id , FILE_INPUT ) ;
    (95) VARS -> . TYPE VARS_ID ;
    (85) TYPE -> . int
    (86) TYPE -> . float
    (87) TYPE -> . char
    (88) TYPE -> . string

    id              reduce using rule 12 (BLOCK_INST -> .)
    if              reduce using rule 12 (BLOCK_INST -> .)
    while           reduce using rule 12 (BLOCK_INST -> .)
    printCol        reduce using rule 12 (BLOCK_INST -> .)
    printTags       reduce using rule 12 (BLOCK_INST -> .)
    printData       reduce using rule 12 (BLOCK_INST -> .)
    printHeaders    reduce using rule 12 (BLOCK_INST -> .)
    printCell       reduce using rule 12 (BLOCK_INST -> .)
    printRow        reduce using rule 12 (BLOCK_INST -> .)
    rbind           reduce using rule 12 (BLOCK_INST -> .)
    cbind           reduce using rule 12 (BLOCK_INST -> .)
    correlateHeaders reduce using rule 12 (BLOCK_INST -> .)
    correlate       reduce using rule 12 (BLOCK_INST -> .)
    }               reduce using rule 12 (BLOCK_INST -> .)
    return          reduce using rule 12 (BLOCK_INST -> .)
    dataframe       shift and go to state 4
    int             shift and go to state 2
    float           shift and go to state 9
    char            shift and go to state 5
    string          shift and go to state 7

    VARS                           shift and go to state 1
    INSTANTIATE                    shift and go to state 46
    BLOCK_INST                     shift and go to state 47
    CREATE_DF                      shift and go to state 8
    TYPE                           shift and go to state 11

state 38

    (1) PROGRAM -> PROGRAM_VARS PROGRAM_FUNCTIONS main : BLOCK .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_VARS PROGRAM_FUNCTIONS main : BLOCK .)


state 39

    (44) FILE_INPUT -> cte_string . . csv

    csv             shift and go to state 48


state 40

    (26) CREATE_DF -> dataframe ( id , FILE_INPUT ) . ;

    ;               shift and go to state 49


state 41

    (27) CREATE_DF_TAGS -> cte_string . ,
    (28) CREATE_DF_TAGS -> cte_string .

    ,               shift and go to state 50
    ]               reduce using rule 28 (CREATE_DF_TAGS -> cte_string .)


state 42

    (25) CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS . ] , FILE_INPUT ) ;

    ]               shift and go to state 51


state 43

    (45) FUNCTION -> void func id ( PARAMETERS . ) : BLOCK

    )               shift and go to state 52


state 44

    (53) PARAMETERS -> TYPE . id , PARAMETERS
    (54) PARAMETERS -> TYPE . id

    id              shift and go to state 53


state 45

    (46) FUNCTION -> TYPE func id ( PARAMETERS . ) : BLOCK

    )               shift and go to state 54


state 46

    (11) BLOCK_INST -> INSTANTIATE . BLOCK_INST
    (11) BLOCK_INST -> . INSTANTIATE BLOCK_INST
    (12) BLOCK_INST -> .
    (47) INSTANTIATE -> . CREATE_DF
    (48) INSTANTIATE -> . VARS
    (25) CREATE_DF -> . dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ;
    (26) CREATE_DF -> . dataframe ( id , FILE_INPUT ) ;
    (95) VARS -> . TYPE VARS_ID ;
    (85) TYPE -> . int
    (86) TYPE -> . float
    (87) TYPE -> . char
    (88) TYPE -> . string

    id              reduce using rule 12 (BLOCK_INST -> .)
    if              reduce using rule 12 (BLOCK_INST -> .)
    while           reduce using rule 12 (BLOCK_INST -> .)
    printCol        reduce using rule 12 (BLOCK_INST -> .)
    printTags       reduce using rule 12 (BLOCK_INST -> .)
    printData       reduce using rule 12 (BLOCK_INST -> .)
    printHeaders    reduce using rule 12 (BLOCK_INST -> .)
    printCell       reduce using rule 12 (BLOCK_INST -> .)
    printRow        reduce using rule 12 (BLOCK_INST -> .)
    rbind           reduce using rule 12 (BLOCK_INST -> .)
    cbind           reduce using rule 12 (BLOCK_INST -> .)
    correlateHeaders reduce using rule 12 (BLOCK_INST -> .)
    correlate       reduce using rule 12 (BLOCK_INST -> .)
    }               reduce using rule 12 (BLOCK_INST -> .)
    return          reduce using rule 12 (BLOCK_INST -> .)
    dataframe       shift and go to state 4
    int             shift and go to state 2
    float           shift and go to state 9
    char            shift and go to state 5
    string          shift and go to state 7

    VARS                           shift and go to state 1
    INSTANTIATE                    shift and go to state 46
    BLOCK_INST                     shift and go to state 55
    CREATE_DF                      shift and go to state 8
    TYPE                           shift and go to state 11

state 47

    (9) BLOCK -> { BLOCK_INST . BLOCK_STM }
    (10) BLOCK -> { BLOCK_INST . BLOCK_STM return EXP }
    (13) BLOCK_STM -> . STATEMENT BLOCK_STM
    (14) BLOCK_STM -> .
    (72) STATEMENT -> . ASSIGNMENT
    (73) STATEMENT -> . CONDITION
    (74) STATEMENT -> . OPERATION
    (75) STATEMENT -> . PRINT
    (76) STATEMENT -> . LOOP
    (77) STATEMENT -> . CALLFUNC
    (4) ASSIGNMENT -> . id = EXP ;
    (19) CONDITION -> . if ( SUPER_EXPRESSION ) BLOCK
    (20) CONDITION -> . if ( SUPER_EXPRESSION ) BLOCK else BLOCK
    (50) OPERATION -> . BINDINGS
    (51) OPERATION -> . CORRELATION
    (52) OPERATION -> . CALLFUNC
    (62) PRINT -> . PRINT_COL
    (63) PRINT -> . PRINT_TAGS
    (64) PRINT -> . PRINT_DATA
    (65) PRINT -> . PRINT_HEADERS
    (66) PRINT -> . PRINT_CELL
    (67) PRINT -> . PRINT_ROW
    (49) LOOP -> . while ( SUPER_EXPRESSION ) BLOCK
    (15) CALLFUNC -> . id ( CALLFUNC_PARAMS ) ;
    (7) BINDINGS -> . BIND_ROWS
    (8) BINDINGS -> . BIND_COLS
    (23) CORRELATION -> . CORR_HEADERS
    (24) CORRELATION -> . CORR
    (56) PRINT_COL -> . printCol TABLE_HEADER ;
    (57) PRINT_COL -> . printCol ACCESS_COL ;
    (61) PRINT_TAGS -> . printTags id ;
    (58) PRINT_DATA -> . printData id ;
    (59) PRINT_HEADERS -> . printHeaders id ;
    (55) PRINT_CELL -> . printCell id [ EXP , EXP ] ;
    (60) PRINT_ROW -> . printRow id ACCESS_ROW ;
    (6) BIND_ROWS -> . rbind ( id , ACCESS_ROW ) ;
    (5) BIND_COLS -> . cbind ( id , ACCESS_COL ) ;
    (21) CORR_HEADERS -> . correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ;
    (22) CORR -> . correlate ( id , id , VAR_CTE ) ;

    }               reduce using rule 14 (BLOCK_STM -> .)
    return          reduce using rule 14 (BLOCK_STM -> .)
    id              shift and go to state 63
    if              shift and go to state 64
    while           shift and go to state 84
    printCol        shift and go to state 87
    printTags       shift and go to state 58
    printData       shift and go to state 79
    printHeaders    shift and go to state 83
    printCell       shift and go to state 68
    printRow        shift and go to state 71
    rbind           shift and go to state 73
    cbind           shift and go to state 56
    correlateHeaders shift and go to state 81
    correlate       shift and go to state 78

    STATEMENT                      shift and go to state 74
    ASSIGNMENT                     shift and go to state 59
    PRINT_DATA                     shift and go to state 60
    PRINT                          shift and go to state 61
    BINDINGS                       shift and go to state 62
    PRINT_TAGS                     shift and go to state 65
    BIND_ROWS                      shift and go to state 66
    PRINT_HEADERS                  shift and go to state 67
    BLOCK_STM                      shift and go to state 69
    OPERATION                      shift and go to state 76
    CONDITION                      shift and go to state 70
    BIND_COLS                      shift and go to state 72
    PRINT_CELL                     shift and go to state 57
    CORRELATION                    shift and go to state 75
    PRINT_COL                      shift and go to state 77
    CALLFUNC                       shift and go to state 80
    PRINT_ROW                      shift and go to state 82
    CORR_HEADERS                   shift and go to state 85
    CORR                           shift and go to state 86
    LOOP                           shift and go to state 88

state 48

    (44) FILE_INPUT -> cte_string . csv .

    )               reduce using rule 44 (FILE_INPUT -> cte_string . csv .)


state 49

    (26) CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .

    dataframe       reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    int             reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    float           reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    char            reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    string          reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    id              reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    if              reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    while           reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    printCol        reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    printTags       reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    printData       reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    printHeaders    reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    printCell       reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    printRow        reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    rbind           reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    cbind           reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    correlateHeaders reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    correlate       reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    }               reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    return          reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    void            reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)
    main            reduce using rule 26 (CREATE_DF -> dataframe ( id , FILE_INPUT ) ; .)


state 50

    (27) CREATE_DF_TAGS -> cte_string , .

    ]               reduce using rule 27 (CREATE_DF_TAGS -> cte_string , .)


state 51

    (25) CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] . , FILE_INPUT ) ;

    ,               shift and go to state 89


state 52

    (45) FUNCTION -> void func id ( PARAMETERS ) . : BLOCK

    :               shift and go to state 90


state 53

    (53) PARAMETERS -> TYPE id . , PARAMETERS
    (54) PARAMETERS -> TYPE id .

    ,               shift and go to state 91
    )               reduce using rule 54 (PARAMETERS -> TYPE id .)


state 54

    (46) FUNCTION -> TYPE func id ( PARAMETERS ) . : BLOCK

    :               shift and go to state 92


state 55

    (11) BLOCK_INST -> INSTANTIATE BLOCK_INST .

    id              reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    if              reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    while           reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    printCol        reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    printTags       reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    printData       reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    printHeaders    reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    printCell       reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    printRow        reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    rbind           reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    cbind           reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    correlateHeaders reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    correlate       reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    }               reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)
    return          reduce using rule 11 (BLOCK_INST -> INSTANTIATE BLOCK_INST .)


state 56

    (5) BIND_COLS -> cbind . ( id , ACCESS_COL ) ;

    (               shift and go to state 93


state 57

    (66) PRINT -> PRINT_CELL .

    id              reduce using rule 66 (PRINT -> PRINT_CELL .)
    if              reduce using rule 66 (PRINT -> PRINT_CELL .)
    while           reduce using rule 66 (PRINT -> PRINT_CELL .)
    printCol        reduce using rule 66 (PRINT -> PRINT_CELL .)
    printTags       reduce using rule 66 (PRINT -> PRINT_CELL .)
    printData       reduce using rule 66 (PRINT -> PRINT_CELL .)
    printHeaders    reduce using rule 66 (PRINT -> PRINT_CELL .)
    printCell       reduce using rule 66 (PRINT -> PRINT_CELL .)
    printRow        reduce using rule 66 (PRINT -> PRINT_CELL .)
    rbind           reduce using rule 66 (PRINT -> PRINT_CELL .)
    cbind           reduce using rule 66 (PRINT -> PRINT_CELL .)
    correlateHeaders reduce using rule 66 (PRINT -> PRINT_CELL .)
    correlate       reduce using rule 66 (PRINT -> PRINT_CELL .)
    }               reduce using rule 66 (PRINT -> PRINT_CELL .)
    return          reduce using rule 66 (PRINT -> PRINT_CELL .)


state 58

    (61) PRINT_TAGS -> printTags . id ;

    id              shift and go to state 94


state 59

    (72) STATEMENT -> ASSIGNMENT .

    id              reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    if              reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    while           reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    printCol        reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    printTags       reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    printData       reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    printHeaders    reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    printCell       reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    printRow        reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    rbind           reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    cbind           reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    correlateHeaders reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    correlate       reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    }               reduce using rule 72 (STATEMENT -> ASSIGNMENT .)
    return          reduce using rule 72 (STATEMENT -> ASSIGNMENT .)


state 60

    (64) PRINT -> PRINT_DATA .

    id              reduce using rule 64 (PRINT -> PRINT_DATA .)
    if              reduce using rule 64 (PRINT -> PRINT_DATA .)
    while           reduce using rule 64 (PRINT -> PRINT_DATA .)
    printCol        reduce using rule 64 (PRINT -> PRINT_DATA .)
    printTags       reduce using rule 64 (PRINT -> PRINT_DATA .)
    printData       reduce using rule 64 (PRINT -> PRINT_DATA .)
    printHeaders    reduce using rule 64 (PRINT -> PRINT_DATA .)
    printCell       reduce using rule 64 (PRINT -> PRINT_DATA .)
    printRow        reduce using rule 64 (PRINT -> PRINT_DATA .)
    rbind           reduce using rule 64 (PRINT -> PRINT_DATA .)
    cbind           reduce using rule 64 (PRINT -> PRINT_DATA .)
    correlateHeaders reduce using rule 64 (PRINT -> PRINT_DATA .)
    correlate       reduce using rule 64 (PRINT -> PRINT_DATA .)
    }               reduce using rule 64 (PRINT -> PRINT_DATA .)
    return          reduce using rule 64 (PRINT -> PRINT_DATA .)


state 61

    (75) STATEMENT -> PRINT .

    id              reduce using rule 75 (STATEMENT -> PRINT .)
    if              reduce using rule 75 (STATEMENT -> PRINT .)
    while           reduce using rule 75 (STATEMENT -> PRINT .)
    printCol        reduce using rule 75 (STATEMENT -> PRINT .)
    printTags       reduce using rule 75 (STATEMENT -> PRINT .)
    printData       reduce using rule 75 (STATEMENT -> PRINT .)
    printHeaders    reduce using rule 75 (STATEMENT -> PRINT .)
    printCell       reduce using rule 75 (STATEMENT -> PRINT .)
    printRow        reduce using rule 75 (STATEMENT -> PRINT .)
    rbind           reduce using rule 75 (STATEMENT -> PRINT .)
    cbind           reduce using rule 75 (STATEMENT -> PRINT .)
    correlateHeaders reduce using rule 75 (STATEMENT -> PRINT .)
    correlate       reduce using rule 75 (STATEMENT -> PRINT .)
    }               reduce using rule 75 (STATEMENT -> PRINT .)
    return          reduce using rule 75 (STATEMENT -> PRINT .)


state 62

    (50) OPERATION -> BINDINGS .

    id              reduce using rule 50 (OPERATION -> BINDINGS .)
    if              reduce using rule 50 (OPERATION -> BINDINGS .)
    while           reduce using rule 50 (OPERATION -> BINDINGS .)
    printCol        reduce using rule 50 (OPERATION -> BINDINGS .)
    printTags       reduce using rule 50 (OPERATION -> BINDINGS .)
    printData       reduce using rule 50 (OPERATION -> BINDINGS .)
    printHeaders    reduce using rule 50 (OPERATION -> BINDINGS .)
    printCell       reduce using rule 50 (OPERATION -> BINDINGS .)
    printRow        reduce using rule 50 (OPERATION -> BINDINGS .)
    rbind           reduce using rule 50 (OPERATION -> BINDINGS .)
    cbind           reduce using rule 50 (OPERATION -> BINDINGS .)
    correlateHeaders reduce using rule 50 (OPERATION -> BINDINGS .)
    correlate       reduce using rule 50 (OPERATION -> BINDINGS .)
    }               reduce using rule 50 (OPERATION -> BINDINGS .)
    return          reduce using rule 50 (OPERATION -> BINDINGS .)


state 63

    (4) ASSIGNMENT -> id . = EXP ;
    (15) CALLFUNC -> id . ( CALLFUNC_PARAMS ) ;

    =               shift and go to state 96
    (               shift and go to state 95


state 64

    (19) CONDITION -> if . ( SUPER_EXPRESSION ) BLOCK
    (20) CONDITION -> if . ( SUPER_EXPRESSION ) BLOCK else BLOCK

    (               shift and go to state 97


state 65

    (63) PRINT -> PRINT_TAGS .

    id              reduce using rule 63 (PRINT -> PRINT_TAGS .)
    if              reduce using rule 63 (PRINT -> PRINT_TAGS .)
    while           reduce using rule 63 (PRINT -> PRINT_TAGS .)
    printCol        reduce using rule 63 (PRINT -> PRINT_TAGS .)
    printTags       reduce using rule 63 (PRINT -> PRINT_TAGS .)
    printData       reduce using rule 63 (PRINT -> PRINT_TAGS .)
    printHeaders    reduce using rule 63 (PRINT -> PRINT_TAGS .)
    printCell       reduce using rule 63 (PRINT -> PRINT_TAGS .)
    printRow        reduce using rule 63 (PRINT -> PRINT_TAGS .)
    rbind           reduce using rule 63 (PRINT -> PRINT_TAGS .)
    cbind           reduce using rule 63 (PRINT -> PRINT_TAGS .)
    correlateHeaders reduce using rule 63 (PRINT -> PRINT_TAGS .)
    correlate       reduce using rule 63 (PRINT -> PRINT_TAGS .)
    }               reduce using rule 63 (PRINT -> PRINT_TAGS .)
    return          reduce using rule 63 (PRINT -> PRINT_TAGS .)


state 66

    (7) BINDINGS -> BIND_ROWS .

    id              reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    if              reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    while           reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    printCol        reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    printTags       reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    printData       reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    printHeaders    reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    printCell       reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    printRow        reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    rbind           reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    cbind           reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    correlateHeaders reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    correlate       reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    }               reduce using rule 7 (BINDINGS -> BIND_ROWS .)
    return          reduce using rule 7 (BINDINGS -> BIND_ROWS .)


state 67

    (65) PRINT -> PRINT_HEADERS .

    id              reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    if              reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    while           reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    printCol        reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    printTags       reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    printData       reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    printHeaders    reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    printCell       reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    printRow        reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    rbind           reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    cbind           reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    correlateHeaders reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    correlate       reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    }               reduce using rule 65 (PRINT -> PRINT_HEADERS .)
    return          reduce using rule 65 (PRINT -> PRINT_HEADERS .)


state 68

    (55) PRINT_CELL -> printCell . id [ EXP , EXP ] ;

    id              shift and go to state 98


state 69

    (9) BLOCK -> { BLOCK_INST BLOCK_STM . }
    (10) BLOCK -> { BLOCK_INST BLOCK_STM . return EXP }

    }               shift and go to state 100
    return          shift and go to state 99


state 70

    (73) STATEMENT -> CONDITION .

    id              reduce using rule 73 (STATEMENT -> CONDITION .)
    if              reduce using rule 73 (STATEMENT -> CONDITION .)
    while           reduce using rule 73 (STATEMENT -> CONDITION .)
    printCol        reduce using rule 73 (STATEMENT -> CONDITION .)
    printTags       reduce using rule 73 (STATEMENT -> CONDITION .)
    printData       reduce using rule 73 (STATEMENT -> CONDITION .)
    printHeaders    reduce using rule 73 (STATEMENT -> CONDITION .)
    printCell       reduce using rule 73 (STATEMENT -> CONDITION .)
    printRow        reduce using rule 73 (STATEMENT -> CONDITION .)
    rbind           reduce using rule 73 (STATEMENT -> CONDITION .)
    cbind           reduce using rule 73 (STATEMENT -> CONDITION .)
    correlateHeaders reduce using rule 73 (STATEMENT -> CONDITION .)
    correlate       reduce using rule 73 (STATEMENT -> CONDITION .)
    }               reduce using rule 73 (STATEMENT -> CONDITION .)
    return          reduce using rule 73 (STATEMENT -> CONDITION .)


state 71

    (60) PRINT_ROW -> printRow . id ACCESS_ROW ;

    id              shift and go to state 101


state 72

    (8) BINDINGS -> BIND_COLS .

    id              reduce using rule 8 (BINDINGS -> BIND_COLS .)
    if              reduce using rule 8 (BINDINGS -> BIND_COLS .)
    while           reduce using rule 8 (BINDINGS -> BIND_COLS .)
    printCol        reduce using rule 8 (BINDINGS -> BIND_COLS .)
    printTags       reduce using rule 8 (BINDINGS -> BIND_COLS .)
    printData       reduce using rule 8 (BINDINGS -> BIND_COLS .)
    printHeaders    reduce using rule 8 (BINDINGS -> BIND_COLS .)
    printCell       reduce using rule 8 (BINDINGS -> BIND_COLS .)
    printRow        reduce using rule 8 (BINDINGS -> BIND_COLS .)
    rbind           reduce using rule 8 (BINDINGS -> BIND_COLS .)
    cbind           reduce using rule 8 (BINDINGS -> BIND_COLS .)
    correlateHeaders reduce using rule 8 (BINDINGS -> BIND_COLS .)
    correlate       reduce using rule 8 (BINDINGS -> BIND_COLS .)
    }               reduce using rule 8 (BINDINGS -> BIND_COLS .)
    return          reduce using rule 8 (BINDINGS -> BIND_COLS .)


state 73

    (6) BIND_ROWS -> rbind . ( id , ACCESS_ROW ) ;

    (               shift and go to state 102


state 74

    (13) BLOCK_STM -> STATEMENT . BLOCK_STM
    (13) BLOCK_STM -> . STATEMENT BLOCK_STM
    (14) BLOCK_STM -> .
    (72) STATEMENT -> . ASSIGNMENT
    (73) STATEMENT -> . CONDITION
    (74) STATEMENT -> . OPERATION
    (75) STATEMENT -> . PRINT
    (76) STATEMENT -> . LOOP
    (77) STATEMENT -> . CALLFUNC
    (4) ASSIGNMENT -> . id = EXP ;
    (19) CONDITION -> . if ( SUPER_EXPRESSION ) BLOCK
    (20) CONDITION -> . if ( SUPER_EXPRESSION ) BLOCK else BLOCK
    (50) OPERATION -> . BINDINGS
    (51) OPERATION -> . CORRELATION
    (52) OPERATION -> . CALLFUNC
    (62) PRINT -> . PRINT_COL
    (63) PRINT -> . PRINT_TAGS
    (64) PRINT -> . PRINT_DATA
    (65) PRINT -> . PRINT_HEADERS
    (66) PRINT -> . PRINT_CELL
    (67) PRINT -> . PRINT_ROW
    (49) LOOP -> . while ( SUPER_EXPRESSION ) BLOCK
    (15) CALLFUNC -> . id ( CALLFUNC_PARAMS ) ;
    (7) BINDINGS -> . BIND_ROWS
    (8) BINDINGS -> . BIND_COLS
    (23) CORRELATION -> . CORR_HEADERS
    (24) CORRELATION -> . CORR
    (56) PRINT_COL -> . printCol TABLE_HEADER ;
    (57) PRINT_COL -> . printCol ACCESS_COL ;
    (61) PRINT_TAGS -> . printTags id ;
    (58) PRINT_DATA -> . printData id ;
    (59) PRINT_HEADERS -> . printHeaders id ;
    (55) PRINT_CELL -> . printCell id [ EXP , EXP ] ;
    (60) PRINT_ROW -> . printRow id ACCESS_ROW ;
    (6) BIND_ROWS -> . rbind ( id , ACCESS_ROW ) ;
    (5) BIND_COLS -> . cbind ( id , ACCESS_COL ) ;
    (21) CORR_HEADERS -> . correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ;
    (22) CORR -> . correlate ( id , id , VAR_CTE ) ;

    }               reduce using rule 14 (BLOCK_STM -> .)
    return          reduce using rule 14 (BLOCK_STM -> .)
    id              shift and go to state 63
    if              shift and go to state 64
    while           shift and go to state 84
    printCol        shift and go to state 87
    printTags       shift and go to state 58
    printData       shift and go to state 79
    printHeaders    shift and go to state 83
    printCell       shift and go to state 68
    printRow        shift and go to state 71
    rbind           shift and go to state 73
    cbind           shift and go to state 56
    correlateHeaders shift and go to state 81
    correlate       shift and go to state 78

    STATEMENT                      shift and go to state 74
    ASSIGNMENT                     shift and go to state 59
    PRINT_DATA                     shift and go to state 60
    PRINT                          shift and go to state 61
    BINDINGS                       shift and go to state 62
    PRINT_TAGS                     shift and go to state 65
    BIND_ROWS                      shift and go to state 66
    PRINT_HEADERS                  shift and go to state 67
    BLOCK_STM                      shift and go to state 103
    OPERATION                      shift and go to state 76
    CONDITION                      shift and go to state 70
    BIND_COLS                      shift and go to state 72
    PRINT_CELL                     shift and go to state 57
    CORRELATION                    shift and go to state 75
    PRINT_COL                      shift and go to state 77
    CALLFUNC                       shift and go to state 80
    PRINT_ROW                      shift and go to state 82
    CORR_HEADERS                   shift and go to state 85
    CORR                           shift and go to state 86
    LOOP                           shift and go to state 88

state 75

    (51) OPERATION -> CORRELATION .

    id              reduce using rule 51 (OPERATION -> CORRELATION .)
    if              reduce using rule 51 (OPERATION -> CORRELATION .)
    while           reduce using rule 51 (OPERATION -> CORRELATION .)
    printCol        reduce using rule 51 (OPERATION -> CORRELATION .)
    printTags       reduce using rule 51 (OPERATION -> CORRELATION .)
    printData       reduce using rule 51 (OPERATION -> CORRELATION .)
    printHeaders    reduce using rule 51 (OPERATION -> CORRELATION .)
    printCell       reduce using rule 51 (OPERATION -> CORRELATION .)
    printRow        reduce using rule 51 (OPERATION -> CORRELATION .)
    rbind           reduce using rule 51 (OPERATION -> CORRELATION .)
    cbind           reduce using rule 51 (OPERATION -> CORRELATION .)
    correlateHeaders reduce using rule 51 (OPERATION -> CORRELATION .)
    correlate       reduce using rule 51 (OPERATION -> CORRELATION .)
    }               reduce using rule 51 (OPERATION -> CORRELATION .)
    return          reduce using rule 51 (OPERATION -> CORRELATION .)


state 76

    (74) STATEMENT -> OPERATION .

    id              reduce using rule 74 (STATEMENT -> OPERATION .)
    if              reduce using rule 74 (STATEMENT -> OPERATION .)
    while           reduce using rule 74 (STATEMENT -> OPERATION .)
    printCol        reduce using rule 74 (STATEMENT -> OPERATION .)
    printTags       reduce using rule 74 (STATEMENT -> OPERATION .)
    printData       reduce using rule 74 (STATEMENT -> OPERATION .)
    printHeaders    reduce using rule 74 (STATEMENT -> OPERATION .)
    printCell       reduce using rule 74 (STATEMENT -> OPERATION .)
    printRow        reduce using rule 74 (STATEMENT -> OPERATION .)
    rbind           reduce using rule 74 (STATEMENT -> OPERATION .)
    cbind           reduce using rule 74 (STATEMENT -> OPERATION .)
    correlateHeaders reduce using rule 74 (STATEMENT -> OPERATION .)
    correlate       reduce using rule 74 (STATEMENT -> OPERATION .)
    }               reduce using rule 74 (STATEMENT -> OPERATION .)
    return          reduce using rule 74 (STATEMENT -> OPERATION .)


state 77

    (62) PRINT -> PRINT_COL .

    id              reduce using rule 62 (PRINT -> PRINT_COL .)
    if              reduce using rule 62 (PRINT -> PRINT_COL .)
    while           reduce using rule 62 (PRINT -> PRINT_COL .)
    printCol        reduce using rule 62 (PRINT -> PRINT_COL .)
    printTags       reduce using rule 62 (PRINT -> PRINT_COL .)
    printData       reduce using rule 62 (PRINT -> PRINT_COL .)
    printHeaders    reduce using rule 62 (PRINT -> PRINT_COL .)
    printCell       reduce using rule 62 (PRINT -> PRINT_COL .)
    printRow        reduce using rule 62 (PRINT -> PRINT_COL .)
    rbind           reduce using rule 62 (PRINT -> PRINT_COL .)
    cbind           reduce using rule 62 (PRINT -> PRINT_COL .)
    correlateHeaders reduce using rule 62 (PRINT -> PRINT_COL .)
    correlate       reduce using rule 62 (PRINT -> PRINT_COL .)
    }               reduce using rule 62 (PRINT -> PRINT_COL .)
    return          reduce using rule 62 (PRINT -> PRINT_COL .)


state 78

    (22) CORR -> correlate . ( id , id , VAR_CTE ) ;

    (               shift and go to state 104


state 79

    (58) PRINT_DATA -> printData . id ;

    id              shift and go to state 105


state 80

    (77) STATEMENT -> CALLFUNC .
    (52) OPERATION -> CALLFUNC .

  ! reduce/reduce conflict for id resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for if resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for while resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for printCol resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for printTags resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for printData resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for printHeaders resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for printCell resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for printRow resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for rbind resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for cbind resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for correlateHeaders resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for correlate resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for } resolved using rule 52 (OPERATION -> CALLFUNC .)
  ! reduce/reduce conflict for return resolved using rule 52 (OPERATION -> CALLFUNC .)
    id              reduce using rule 52 (OPERATION -> CALLFUNC .)
    if              reduce using rule 52 (OPERATION -> CALLFUNC .)
    while           reduce using rule 52 (OPERATION -> CALLFUNC .)
    printCol        reduce using rule 52 (OPERATION -> CALLFUNC .)
    printTags       reduce using rule 52 (OPERATION -> CALLFUNC .)
    printData       reduce using rule 52 (OPERATION -> CALLFUNC .)
    printHeaders    reduce using rule 52 (OPERATION -> CALLFUNC .)
    printCell       reduce using rule 52 (OPERATION -> CALLFUNC .)
    printRow        reduce using rule 52 (OPERATION -> CALLFUNC .)
    rbind           reduce using rule 52 (OPERATION -> CALLFUNC .)
    cbind           reduce using rule 52 (OPERATION -> CALLFUNC .)
    correlateHeaders reduce using rule 52 (OPERATION -> CALLFUNC .)
    correlate       reduce using rule 52 (OPERATION -> CALLFUNC .)
    }               reduce using rule 52 (OPERATION -> CALLFUNC .)
    return          reduce using rule 52 (OPERATION -> CALLFUNC .)

  ! id              [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! if              [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! while           [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! printCol        [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! printTags       [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! printData       [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! printHeaders    [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! printCell       [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! printRow        [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! rbind           [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! cbind           [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! correlateHeaders [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! correlate       [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! }               [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]
  ! return          [ reduce using rule 77 (STATEMENT -> CALLFUNC .) ]


state 81

    (21) CORR_HEADERS -> correlateHeaders . ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ;

    (               shift and go to state 106


state 82

    (67) PRINT -> PRINT_ROW .

    id              reduce using rule 67 (PRINT -> PRINT_ROW .)
    if              reduce using rule 67 (PRINT -> PRINT_ROW .)
    while           reduce using rule 67 (PRINT -> PRINT_ROW .)
    printCol        reduce using rule 67 (PRINT -> PRINT_ROW .)
    printTags       reduce using rule 67 (PRINT -> PRINT_ROW .)
    printData       reduce using rule 67 (PRINT -> PRINT_ROW .)
    printHeaders    reduce using rule 67 (PRINT -> PRINT_ROW .)
    printCell       reduce using rule 67 (PRINT -> PRINT_ROW .)
    printRow        reduce using rule 67 (PRINT -> PRINT_ROW .)
    rbind           reduce using rule 67 (PRINT -> PRINT_ROW .)
    cbind           reduce using rule 67 (PRINT -> PRINT_ROW .)
    correlateHeaders reduce using rule 67 (PRINT -> PRINT_ROW .)
    correlate       reduce using rule 67 (PRINT -> PRINT_ROW .)
    }               reduce using rule 67 (PRINT -> PRINT_ROW .)
    return          reduce using rule 67 (PRINT -> PRINT_ROW .)


state 83

    (59) PRINT_HEADERS -> printHeaders . id ;

    id              shift and go to state 107


state 84

    (49) LOOP -> while . ( SUPER_EXPRESSION ) BLOCK

    (               shift and go to state 108


state 85

    (23) CORRELATION -> CORR_HEADERS .

    id              reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    if              reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    while           reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    printCol        reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    printTags       reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    printData       reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    printHeaders    reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    printCell       reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    printRow        reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    rbind           reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    cbind           reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    correlateHeaders reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    correlate       reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    }               reduce using rule 23 (CORRELATION -> CORR_HEADERS .)
    return          reduce using rule 23 (CORRELATION -> CORR_HEADERS .)


state 86

    (24) CORRELATION -> CORR .

    id              reduce using rule 24 (CORRELATION -> CORR .)
    if              reduce using rule 24 (CORRELATION -> CORR .)
    while           reduce using rule 24 (CORRELATION -> CORR .)
    printCol        reduce using rule 24 (CORRELATION -> CORR .)
    printTags       reduce using rule 24 (CORRELATION -> CORR .)
    printData       reduce using rule 24 (CORRELATION -> CORR .)
    printHeaders    reduce using rule 24 (CORRELATION -> CORR .)
    printCell       reduce using rule 24 (CORRELATION -> CORR .)
    printRow        reduce using rule 24 (CORRELATION -> CORR .)
    rbind           reduce using rule 24 (CORRELATION -> CORR .)
    cbind           reduce using rule 24 (CORRELATION -> CORR .)
    correlateHeaders reduce using rule 24 (CORRELATION -> CORR .)
    correlate       reduce using rule 24 (CORRELATION -> CORR .)
    }               reduce using rule 24 (CORRELATION -> CORR .)
    return          reduce using rule 24 (CORRELATION -> CORR .)


state 87

    (56) PRINT_COL -> printCol . TABLE_HEADER ;
    (57) PRINT_COL -> printCol . ACCESS_COL ;
    (81) TABLE_HEADER -> . id $ id
    (2) ACCESS_COL -> . id . row ( EXP )

    id              shift and go to state 110

    TABLE_HEADER                   shift and go to state 109
    ACCESS_COL                     shift and go to state 111

state 88

    (76) STATEMENT -> LOOP .

    id              reduce using rule 76 (STATEMENT -> LOOP .)
    if              reduce using rule 76 (STATEMENT -> LOOP .)
    while           reduce using rule 76 (STATEMENT -> LOOP .)
    printCol        reduce using rule 76 (STATEMENT -> LOOP .)
    printTags       reduce using rule 76 (STATEMENT -> LOOP .)
    printData       reduce using rule 76 (STATEMENT -> LOOP .)
    printHeaders    reduce using rule 76 (STATEMENT -> LOOP .)
    printCell       reduce using rule 76 (STATEMENT -> LOOP .)
    printRow        reduce using rule 76 (STATEMENT -> LOOP .)
    rbind           reduce using rule 76 (STATEMENT -> LOOP .)
    cbind           reduce using rule 76 (STATEMENT -> LOOP .)
    correlateHeaders reduce using rule 76 (STATEMENT -> LOOP .)
    correlate       reduce using rule 76 (STATEMENT -> LOOP .)
    }               reduce using rule 76 (STATEMENT -> LOOP .)
    return          reduce using rule 76 (STATEMENT -> LOOP .)


state 89

    (25) CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , . FILE_INPUT ) ;
    (44) FILE_INPUT -> . cte_string . csv

    cte_string      shift and go to state 32

    FILE_INPUT                     shift and go to state 112

state 90

    (45) FUNCTION -> void func id ( PARAMETERS ) : . BLOCK
    (9) BLOCK -> . { BLOCK_INST BLOCK_STM }
    (10) BLOCK -> . { BLOCK_INST BLOCK_STM return EXP }

    {               shift and go to state 37

    BLOCK                          shift and go to state 113

state 91

    (53) PARAMETERS -> TYPE id , . PARAMETERS
    (53) PARAMETERS -> . TYPE id , PARAMETERS
    (54) PARAMETERS -> . TYPE id
    (85) TYPE -> . int
    (86) TYPE -> . float
    (87) TYPE -> . char
    (88) TYPE -> . string

    int             shift and go to state 2
    float           shift and go to state 9
    char            shift and go to state 5
    string          shift and go to state 7

    TYPE                           shift and go to state 44
    PARAMETERS                     shift and go to state 114

state 92

    (46) FUNCTION -> TYPE func id ( PARAMETERS ) : . BLOCK
    (9) BLOCK -> . { BLOCK_INST BLOCK_STM }
    (10) BLOCK -> . { BLOCK_INST BLOCK_STM return EXP }

    {               shift and go to state 37

    BLOCK                          shift and go to state 115

state 93

    (5) BIND_COLS -> cbind ( . id , ACCESS_COL ) ;

    id              shift and go to state 116


state 94

    (61) PRINT_TAGS -> printTags id . ;

    ;               shift and go to state 117


state 95

    (15) CALLFUNC -> id ( . CALLFUNC_PARAMS ) ;
    (16) CALLFUNC_PARAMS -> . EXP
    (17) CALLFUNC_PARAMS -> . EXP ,
    (18) CALLFUNC_PARAMS -> .
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    )               reduce using rule 18 (CALLFUNC_PARAMS -> .)
    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    VAR_CTE                        shift and go to state 125
    CALLFUNC_PARAMS                shift and go to state 126
    EXP                            shift and go to state 127
    FACTOR                         shift and go to state 128

state 96

    (4) ASSIGNMENT -> id = . EXP ;
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 132
    FACTOR                         shift and go to state 128

state 97

    (19) CONDITION -> if ( . SUPER_EXPRESSION ) BLOCK
    (20) CONDITION -> if ( . SUPER_EXPRESSION ) BLOCK else BLOCK
    (78) SUPER_EXPRESSION -> . EXPRESSION
    (79) SUPER_EXPRESSION -> . EXPRESSION relop_and EXPRESSION
    (80) SUPER_EXPRESSION -> . EXPRESSION relop_or EXPRESSION
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_SYM EXP
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    EXPRESSION                     shift and go to state 134
    SUPER_EXPRESSION               shift and go to state 135
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 133
    FACTOR                         shift and go to state 128

state 98

    (55) PRINT_CELL -> printCell id . [ EXP , EXP ] ;

    [               shift and go to state 136


state 99

    (10) BLOCK -> { BLOCK_INST BLOCK_STM return . EXP }
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 137
    FACTOR                         shift and go to state 128

state 100

    (9) BLOCK -> { BLOCK_INST BLOCK_STM } .

    void            reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    int             reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    float           reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    char            reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    string          reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    main            reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    else            reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    id              reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    if              reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    while           reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    printCol        reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    printTags       reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    printData       reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    printHeaders    reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    printCell       reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    printRow        reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    rbind           reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    cbind           reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    correlateHeaders reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    correlate       reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    }               reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    return          reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)
    $end            reduce using rule 9 (BLOCK -> { BLOCK_INST BLOCK_STM } .)


state 101

    (60) PRINT_ROW -> printRow id . ACCESS_ROW ;
    (3) ACCESS_ROW -> . id . col ( EXP )

    id              shift and go to state 138

    ACCESS_ROW                     shift and go to state 139

state 102

    (6) BIND_ROWS -> rbind ( . id , ACCESS_ROW ) ;

    id              shift and go to state 140


state 103

    (13) BLOCK_STM -> STATEMENT BLOCK_STM .

    }               reduce using rule 13 (BLOCK_STM -> STATEMENT BLOCK_STM .)
    return          reduce using rule 13 (BLOCK_STM -> STATEMENT BLOCK_STM .)


state 104

    (22) CORR -> correlate ( . id , id , VAR_CTE ) ;

    id              shift and go to state 141


state 105

    (58) PRINT_DATA -> printData id . ;

    ;               shift and go to state 142


state 106

    (21) CORR_HEADERS -> correlateHeaders ( . TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ;
    (81) TABLE_HEADER -> . id $ id

    id              shift and go to state 144

    TABLE_HEADER                   shift and go to state 143

state 107

    (59) PRINT_HEADERS -> printHeaders id . ;

    ;               shift and go to state 145


state 108

    (49) LOOP -> while ( . SUPER_EXPRESSION ) BLOCK
    (78) SUPER_EXPRESSION -> . EXPRESSION
    (79) SUPER_EXPRESSION -> . EXPRESSION relop_and EXPRESSION
    (80) SUPER_EXPRESSION -> . EXPRESSION relop_or EXPRESSION
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_SYM EXP
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    EXPRESSION                     shift and go to state 134
    SUPER_EXPRESSION               shift and go to state 146
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 133
    FACTOR                         shift and go to state 128

state 109

    (56) PRINT_COL -> printCol TABLE_HEADER . ;

    ;               shift and go to state 147


state 110

    (81) TABLE_HEADER -> id . $ id
    (2) ACCESS_COL -> id . . row ( EXP )

    $               shift and go to state 148
    .               shift and go to state 149


state 111

    (57) PRINT_COL -> printCol ACCESS_COL . ;

    ;               shift and go to state 150


state 112

    (25) CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT . ) ;

    )               shift and go to state 151


state 113

    (45) FUNCTION -> void func id ( PARAMETERS ) : BLOCK .

    void            reduce using rule 45 (FUNCTION -> void func id ( PARAMETERS ) : BLOCK .)
    int             reduce using rule 45 (FUNCTION -> void func id ( PARAMETERS ) : BLOCK .)
    float           reduce using rule 45 (FUNCTION -> void func id ( PARAMETERS ) : BLOCK .)
    char            reduce using rule 45 (FUNCTION -> void func id ( PARAMETERS ) : BLOCK .)
    string          reduce using rule 45 (FUNCTION -> void func id ( PARAMETERS ) : BLOCK .)
    main            reduce using rule 45 (FUNCTION -> void func id ( PARAMETERS ) : BLOCK .)


state 114

    (53) PARAMETERS -> TYPE id , PARAMETERS .

    )               reduce using rule 53 (PARAMETERS -> TYPE id , PARAMETERS .)


state 115

    (46) FUNCTION -> TYPE func id ( PARAMETERS ) : BLOCK .

    void            reduce using rule 46 (FUNCTION -> TYPE func id ( PARAMETERS ) : BLOCK .)
    int             reduce using rule 46 (FUNCTION -> TYPE func id ( PARAMETERS ) : BLOCK .)
    float           reduce using rule 46 (FUNCTION -> TYPE func id ( PARAMETERS ) : BLOCK .)
    char            reduce using rule 46 (FUNCTION -> TYPE func id ( PARAMETERS ) : BLOCK .)
    string          reduce using rule 46 (FUNCTION -> TYPE func id ( PARAMETERS ) : BLOCK .)
    main            reduce using rule 46 (FUNCTION -> TYPE func id ( PARAMETERS ) : BLOCK .)


state 116

    (5) BIND_COLS -> cbind ( id . , ACCESS_COL ) ;

    ,               shift and go to state 152


state 117

    (61) PRINT_TAGS -> printTags id ; .

    id              reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    if              reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    while           reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    printCol        reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    printTags       reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    printData       reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    printHeaders    reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    printCell       reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    printRow        reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    rbind           reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    cbind           reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    correlateHeaders reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    correlate       reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    }               reduce using rule 61 (PRINT_TAGS -> printTags id ; .)
    return          reduce using rule 61 (PRINT_TAGS -> printTags id ; .)


state 118

    (93) VAR_CTE -> cte_string .

    *               reduce using rule 93 (VAR_CTE -> cte_string .)
    /               reduce using rule 93 (VAR_CTE -> cte_string .)
    +               reduce using rule 93 (VAR_CTE -> cte_string .)
    -               reduce using rule 93 (VAR_CTE -> cte_string .)
    <               reduce using rule 93 (VAR_CTE -> cte_string .)
    >               reduce using rule 93 (VAR_CTE -> cte_string .)
    relop_lsequal   reduce using rule 93 (VAR_CTE -> cte_string .)
    relop_grequal   reduce using rule 93 (VAR_CTE -> cte_string .)
    relop_equals    reduce using rule 93 (VAR_CTE -> cte_string .)
    relop_notequal  reduce using rule 93 (VAR_CTE -> cte_string .)
    )               reduce using rule 93 (VAR_CTE -> cte_string .)
    ,               reduce using rule 93 (VAR_CTE -> cte_string .)
    ;               reduce using rule 93 (VAR_CTE -> cte_string .)
    relop_and       reduce using rule 93 (VAR_CTE -> cte_string .)
    relop_or        reduce using rule 93 (VAR_CTE -> cte_string .)
    }               reduce using rule 93 (VAR_CTE -> cte_string .)
    ]               reduce using rule 93 (VAR_CTE -> cte_string .)


state 119

    (29) EXP -> TERM .
    (30) EXP -> TERM . + EXP
    (31) EXP -> TERM . - EXP

    }               reduce using rule 29 (EXP -> TERM .)
    <               reduce using rule 29 (EXP -> TERM .)
    >               reduce using rule 29 (EXP -> TERM .)
    relop_lsequal   reduce using rule 29 (EXP -> TERM .)
    relop_grequal   reduce using rule 29 (EXP -> TERM .)
    relop_equals    reduce using rule 29 (EXP -> TERM .)
    relop_notequal  reduce using rule 29 (EXP -> TERM .)
    relop_and       reduce using rule 29 (EXP -> TERM .)
    relop_or        reduce using rule 29 (EXP -> TERM .)
    )               reduce using rule 29 (EXP -> TERM .)
    ,               reduce using rule 29 (EXP -> TERM .)
    ;               reduce using rule 29 (EXP -> TERM .)
    ]               reduce using rule 29 (EXP -> TERM .)
    +               shift and go to state 154
    -               shift and go to state 153


state 120

    (94) VAR_CTE -> null .

    *               reduce using rule 94 (VAR_CTE -> null .)
    /               reduce using rule 94 (VAR_CTE -> null .)
    +               reduce using rule 94 (VAR_CTE -> null .)
    -               reduce using rule 94 (VAR_CTE -> null .)
    <               reduce using rule 94 (VAR_CTE -> null .)
    >               reduce using rule 94 (VAR_CTE -> null .)
    relop_lsequal   reduce using rule 94 (VAR_CTE -> null .)
    relop_grequal   reduce using rule 94 (VAR_CTE -> null .)
    relop_equals    reduce using rule 94 (VAR_CTE -> null .)
    relop_notequal  reduce using rule 94 (VAR_CTE -> null .)
    )               reduce using rule 94 (VAR_CTE -> null .)
    ,               reduce using rule 94 (VAR_CTE -> null .)
    ;               reduce using rule 94 (VAR_CTE -> null .)
    relop_and       reduce using rule 94 (VAR_CTE -> null .)
    relop_or        reduce using rule 94 (VAR_CTE -> null .)
    }               reduce using rule 94 (VAR_CTE -> null .)
    ]               reduce using rule 94 (VAR_CTE -> null .)


state 121

    (92) VAR_CTE -> cte_char .

    *               reduce using rule 92 (VAR_CTE -> cte_char .)
    /               reduce using rule 92 (VAR_CTE -> cte_char .)
    +               reduce using rule 92 (VAR_CTE -> cte_char .)
    -               reduce using rule 92 (VAR_CTE -> cte_char .)
    <               reduce using rule 92 (VAR_CTE -> cte_char .)
    >               reduce using rule 92 (VAR_CTE -> cte_char .)
    relop_lsequal   reduce using rule 92 (VAR_CTE -> cte_char .)
    relop_grequal   reduce using rule 92 (VAR_CTE -> cte_char .)
    relop_equals    reduce using rule 92 (VAR_CTE -> cte_char .)
    relop_notequal  reduce using rule 92 (VAR_CTE -> cte_char .)
    )               reduce using rule 92 (VAR_CTE -> cte_char .)
    ,               reduce using rule 92 (VAR_CTE -> cte_char .)
    ;               reduce using rule 92 (VAR_CTE -> cte_char .)
    relop_and       reduce using rule 92 (VAR_CTE -> cte_char .)
    relop_or        reduce using rule 92 (VAR_CTE -> cte_char .)
    }               reduce using rule 92 (VAR_CTE -> cte_char .)
    ]               reduce using rule 92 (VAR_CTE -> cte_char .)


state 122

    (40) FACTOR -> ( . EXPRESSION )
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_SYM EXP
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    EXPRESSION                     shift and go to state 155
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 133
    FACTOR                         shift and go to state 128

state 123

    (41) FACTOR -> + . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    VAR_CTE                        shift and go to state 156

state 124

    (42) FACTOR -> - . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    VAR_CTE                        shift and go to state 157

state 125

    (43) FACTOR -> VAR_CTE .

    *               reduce using rule 43 (FACTOR -> VAR_CTE .)
    /               reduce using rule 43 (FACTOR -> VAR_CTE .)
    +               reduce using rule 43 (FACTOR -> VAR_CTE .)
    -               reduce using rule 43 (FACTOR -> VAR_CTE .)
    )               reduce using rule 43 (FACTOR -> VAR_CTE .)
    ;               reduce using rule 43 (FACTOR -> VAR_CTE .)
    <               reduce using rule 43 (FACTOR -> VAR_CTE .)
    >               reduce using rule 43 (FACTOR -> VAR_CTE .)
    relop_lsequal   reduce using rule 43 (FACTOR -> VAR_CTE .)
    relop_grequal   reduce using rule 43 (FACTOR -> VAR_CTE .)
    relop_equals    reduce using rule 43 (FACTOR -> VAR_CTE .)
    relop_notequal  reduce using rule 43 (FACTOR -> VAR_CTE .)
    relop_and       reduce using rule 43 (FACTOR -> VAR_CTE .)
    relop_or        reduce using rule 43 (FACTOR -> VAR_CTE .)
    ,               reduce using rule 43 (FACTOR -> VAR_CTE .)
    }               reduce using rule 43 (FACTOR -> VAR_CTE .)
    ]               reduce using rule 43 (FACTOR -> VAR_CTE .)


state 126

    (15) CALLFUNC -> id ( CALLFUNC_PARAMS . ) ;

    )               shift and go to state 158


state 127

    (16) CALLFUNC_PARAMS -> EXP .
    (17) CALLFUNC_PARAMS -> EXP . ,

    )               reduce using rule 16 (CALLFUNC_PARAMS -> EXP .)
    ,               shift and go to state 159


state 128

    (82) TERM -> FACTOR .
    (83) TERM -> FACTOR . * TERM
    (84) TERM -> FACTOR . / TERM

    +               reduce using rule 82 (TERM -> FACTOR .)
    -               reduce using rule 82 (TERM -> FACTOR .)
    <               reduce using rule 82 (TERM -> FACTOR .)
    >               reduce using rule 82 (TERM -> FACTOR .)
    relop_lsequal   reduce using rule 82 (TERM -> FACTOR .)
    relop_grequal   reduce using rule 82 (TERM -> FACTOR .)
    relop_equals    reduce using rule 82 (TERM -> FACTOR .)
    relop_notequal  reduce using rule 82 (TERM -> FACTOR .)
    )               reduce using rule 82 (TERM -> FACTOR .)
    relop_and       reduce using rule 82 (TERM -> FACTOR .)
    relop_or        reduce using rule 82 (TERM -> FACTOR .)
    ,               reduce using rule 82 (TERM -> FACTOR .)
    ;               reduce using rule 82 (TERM -> FACTOR .)
    }               reduce using rule 82 (TERM -> FACTOR .)
    ]               reduce using rule 82 (TERM -> FACTOR .)
    *               shift and go to state 160
    /               shift and go to state 161


state 129

    (90) VAR_CTE -> cte_float .

    *               reduce using rule 90 (VAR_CTE -> cte_float .)
    /               reduce using rule 90 (VAR_CTE -> cte_float .)
    +               reduce using rule 90 (VAR_CTE -> cte_float .)
    -               reduce using rule 90 (VAR_CTE -> cte_float .)
    <               reduce using rule 90 (VAR_CTE -> cte_float .)
    >               reduce using rule 90 (VAR_CTE -> cte_float .)
    relop_lsequal   reduce using rule 90 (VAR_CTE -> cte_float .)
    relop_grequal   reduce using rule 90 (VAR_CTE -> cte_float .)
    relop_equals    reduce using rule 90 (VAR_CTE -> cte_float .)
    relop_notequal  reduce using rule 90 (VAR_CTE -> cte_float .)
    )               reduce using rule 90 (VAR_CTE -> cte_float .)
    ,               reduce using rule 90 (VAR_CTE -> cte_float .)
    ;               reduce using rule 90 (VAR_CTE -> cte_float .)
    relop_and       reduce using rule 90 (VAR_CTE -> cte_float .)
    relop_or        reduce using rule 90 (VAR_CTE -> cte_float .)
    }               reduce using rule 90 (VAR_CTE -> cte_float .)
    ]               reduce using rule 90 (VAR_CTE -> cte_float .)


state 130

    (91) VAR_CTE -> cte_int .

    *               reduce using rule 91 (VAR_CTE -> cte_int .)
    /               reduce using rule 91 (VAR_CTE -> cte_int .)
    +               reduce using rule 91 (VAR_CTE -> cte_int .)
    -               reduce using rule 91 (VAR_CTE -> cte_int .)
    <               reduce using rule 91 (VAR_CTE -> cte_int .)
    >               reduce using rule 91 (VAR_CTE -> cte_int .)
    relop_lsequal   reduce using rule 91 (VAR_CTE -> cte_int .)
    relop_grequal   reduce using rule 91 (VAR_CTE -> cte_int .)
    relop_equals    reduce using rule 91 (VAR_CTE -> cte_int .)
    relop_notequal  reduce using rule 91 (VAR_CTE -> cte_int .)
    )               reduce using rule 91 (VAR_CTE -> cte_int .)
    ,               reduce using rule 91 (VAR_CTE -> cte_int .)
    ;               reduce using rule 91 (VAR_CTE -> cte_int .)
    relop_and       reduce using rule 91 (VAR_CTE -> cte_int .)
    relop_or        reduce using rule 91 (VAR_CTE -> cte_int .)
    }               reduce using rule 91 (VAR_CTE -> cte_int .)
    ]               reduce using rule 91 (VAR_CTE -> cte_int .)


state 131

    (89) VAR_CTE -> id .

    *               reduce using rule 89 (VAR_CTE -> id .)
    /               reduce using rule 89 (VAR_CTE -> id .)
    +               reduce using rule 89 (VAR_CTE -> id .)
    -               reduce using rule 89 (VAR_CTE -> id .)
    <               reduce using rule 89 (VAR_CTE -> id .)
    >               reduce using rule 89 (VAR_CTE -> id .)
    relop_lsequal   reduce using rule 89 (VAR_CTE -> id .)
    relop_grequal   reduce using rule 89 (VAR_CTE -> id .)
    relop_equals    reduce using rule 89 (VAR_CTE -> id .)
    relop_notequal  reduce using rule 89 (VAR_CTE -> id .)
    )               reduce using rule 89 (VAR_CTE -> id .)
    ,               reduce using rule 89 (VAR_CTE -> id .)
    ;               reduce using rule 89 (VAR_CTE -> id .)
    relop_and       reduce using rule 89 (VAR_CTE -> id .)
    relop_or        reduce using rule 89 (VAR_CTE -> id .)
    }               reduce using rule 89 (VAR_CTE -> id .)
    ]               reduce using rule 89 (VAR_CTE -> id .)


state 132

    (4) ASSIGNMENT -> id = EXP . ;

    ;               shift and go to state 162


state 133

    (32) EXPRESSION -> EXP .
    (33) EXPRESSION -> EXP . EXPRESSION_SYM EXP
    (34) EXPRESSION_SYM -> . <
    (35) EXPRESSION_SYM -> . >
    (36) EXPRESSION_SYM -> . relop_lsequal
    (37) EXPRESSION_SYM -> . relop_grequal
    (38) EXPRESSION_SYM -> . relop_equals
    (39) EXPRESSION_SYM -> . relop_notequal

    )               reduce using rule 32 (EXPRESSION -> EXP .)
    relop_and       reduce using rule 32 (EXPRESSION -> EXP .)
    relop_or        reduce using rule 32 (EXPRESSION -> EXP .)
    <               shift and go to state 168
    >               shift and go to state 169
    relop_lsequal   shift and go to state 163
    relop_grequal   shift and go to state 165
    relop_equals    shift and go to state 164
    relop_notequal  shift and go to state 166

    EXPRESSION_SYM                 shift and go to state 167

state 134

    (78) SUPER_EXPRESSION -> EXPRESSION .
    (79) SUPER_EXPRESSION -> EXPRESSION . relop_and EXPRESSION
    (80) SUPER_EXPRESSION -> EXPRESSION . relop_or EXPRESSION

    )               reduce using rule 78 (SUPER_EXPRESSION -> EXPRESSION .)
    relop_and       shift and go to state 171
    relop_or        shift and go to state 170


state 135

    (19) CONDITION -> if ( SUPER_EXPRESSION . ) BLOCK
    (20) CONDITION -> if ( SUPER_EXPRESSION . ) BLOCK else BLOCK

    )               shift and go to state 172


state 136

    (55) PRINT_CELL -> printCell id [ . EXP , EXP ] ;
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 173
    FACTOR                         shift and go to state 128

state 137

    (10) BLOCK -> { BLOCK_INST BLOCK_STM return EXP . }

    }               shift and go to state 174


state 138

    (3) ACCESS_ROW -> id . . col ( EXP )

    .               shift and go to state 175


state 139

    (60) PRINT_ROW -> printRow id ACCESS_ROW . ;

    ;               shift and go to state 176


state 140

    (6) BIND_ROWS -> rbind ( id . , ACCESS_ROW ) ;

    ,               shift and go to state 177


state 141

    (22) CORR -> correlate ( id . , id , VAR_CTE ) ;

    ,               shift and go to state 178


state 142

    (58) PRINT_DATA -> printData id ; .

    id              reduce using rule 58 (PRINT_DATA -> printData id ; .)
    if              reduce using rule 58 (PRINT_DATA -> printData id ; .)
    while           reduce using rule 58 (PRINT_DATA -> printData id ; .)
    printCol        reduce using rule 58 (PRINT_DATA -> printData id ; .)
    printTags       reduce using rule 58 (PRINT_DATA -> printData id ; .)
    printData       reduce using rule 58 (PRINT_DATA -> printData id ; .)
    printHeaders    reduce using rule 58 (PRINT_DATA -> printData id ; .)
    printCell       reduce using rule 58 (PRINT_DATA -> printData id ; .)
    printRow        reduce using rule 58 (PRINT_DATA -> printData id ; .)
    rbind           reduce using rule 58 (PRINT_DATA -> printData id ; .)
    cbind           reduce using rule 58 (PRINT_DATA -> printData id ; .)
    correlateHeaders reduce using rule 58 (PRINT_DATA -> printData id ; .)
    correlate       reduce using rule 58 (PRINT_DATA -> printData id ; .)
    }               reduce using rule 58 (PRINT_DATA -> printData id ; .)
    return          reduce using rule 58 (PRINT_DATA -> printData id ; .)


state 143

    (21) CORR_HEADERS -> correlateHeaders ( TABLE_HEADER . , TABLE_HEADER , VAR_CTE ) ;

    ,               shift and go to state 179


state 144

    (81) TABLE_HEADER -> id . $ id

    $               shift and go to state 148


state 145

    (59) PRINT_HEADERS -> printHeaders id ; .

    id              reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    if              reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    while           reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    printCol        reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    printTags       reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    printData       reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    printHeaders    reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    printCell       reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    printRow        reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    rbind           reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    cbind           reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    correlateHeaders reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    correlate       reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    }               reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)
    return          reduce using rule 59 (PRINT_HEADERS -> printHeaders id ; .)


state 146

    (49) LOOP -> while ( SUPER_EXPRESSION . ) BLOCK

    )               shift and go to state 180


state 147

    (56) PRINT_COL -> printCol TABLE_HEADER ; .

    id              reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    if              reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    while           reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    printCol        reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    printTags       reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    printData       reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    printHeaders    reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    printCell       reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    printRow        reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    rbind           reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    cbind           reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    correlateHeaders reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    correlate       reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    }               reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)
    return          reduce using rule 56 (PRINT_COL -> printCol TABLE_HEADER ; .)


state 148

    (81) TABLE_HEADER -> id $ . id

    id              shift and go to state 181


state 149

    (2) ACCESS_COL -> id . . row ( EXP )

    row             shift and go to state 182


state 150

    (57) PRINT_COL -> printCol ACCESS_COL ; .

    id              reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    if              reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    while           reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    printCol        reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    printTags       reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    printData       reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    printHeaders    reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    printCell       reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    printRow        reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    rbind           reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    cbind           reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    correlateHeaders reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    correlate       reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    }               reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)
    return          reduce using rule 57 (PRINT_COL -> printCol ACCESS_COL ; .)


state 151

    (25) CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) . ;

    ;               shift and go to state 183


state 152

    (5) BIND_COLS -> cbind ( id , . ACCESS_COL ) ;
    (2) ACCESS_COL -> . id . row ( EXP )

    id              shift and go to state 184

    ACCESS_COL                     shift and go to state 185

state 153

    (31) EXP -> TERM - . EXP
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 186
    FACTOR                         shift and go to state 128

state 154

    (30) EXP -> TERM + . EXP
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 187
    FACTOR                         shift and go to state 128

state 155

    (40) FACTOR -> ( EXPRESSION . )

    )               shift and go to state 188


state 156

    (41) FACTOR -> + VAR_CTE .

    *               reduce using rule 41 (FACTOR -> + VAR_CTE .)
    /               reduce using rule 41 (FACTOR -> + VAR_CTE .)
    +               reduce using rule 41 (FACTOR -> + VAR_CTE .)
    -               reduce using rule 41 (FACTOR -> + VAR_CTE .)
    )               reduce using rule 41 (FACTOR -> + VAR_CTE .)
    ;               reduce using rule 41 (FACTOR -> + VAR_CTE .)
    <               reduce using rule 41 (FACTOR -> + VAR_CTE .)
    >               reduce using rule 41 (FACTOR -> + VAR_CTE .)
    relop_lsequal   reduce using rule 41 (FACTOR -> + VAR_CTE .)
    relop_grequal   reduce using rule 41 (FACTOR -> + VAR_CTE .)
    relop_equals    reduce using rule 41 (FACTOR -> + VAR_CTE .)
    relop_notequal  reduce using rule 41 (FACTOR -> + VAR_CTE .)
    relop_and       reduce using rule 41 (FACTOR -> + VAR_CTE .)
    relop_or        reduce using rule 41 (FACTOR -> + VAR_CTE .)
    ,               reduce using rule 41 (FACTOR -> + VAR_CTE .)
    }               reduce using rule 41 (FACTOR -> + VAR_CTE .)
    ]               reduce using rule 41 (FACTOR -> + VAR_CTE .)


state 157

    (42) FACTOR -> - VAR_CTE .

    *               reduce using rule 42 (FACTOR -> - VAR_CTE .)
    /               reduce using rule 42 (FACTOR -> - VAR_CTE .)
    +               reduce using rule 42 (FACTOR -> - VAR_CTE .)
    -               reduce using rule 42 (FACTOR -> - VAR_CTE .)
    )               reduce using rule 42 (FACTOR -> - VAR_CTE .)
    ;               reduce using rule 42 (FACTOR -> - VAR_CTE .)
    <               reduce using rule 42 (FACTOR -> - VAR_CTE .)
    >               reduce using rule 42 (FACTOR -> - VAR_CTE .)
    relop_lsequal   reduce using rule 42 (FACTOR -> - VAR_CTE .)
    relop_grequal   reduce using rule 42 (FACTOR -> - VAR_CTE .)
    relop_equals    reduce using rule 42 (FACTOR -> - VAR_CTE .)
    relop_notequal  reduce using rule 42 (FACTOR -> - VAR_CTE .)
    relop_and       reduce using rule 42 (FACTOR -> - VAR_CTE .)
    relop_or        reduce using rule 42 (FACTOR -> - VAR_CTE .)
    ,               reduce using rule 42 (FACTOR -> - VAR_CTE .)
    }               reduce using rule 42 (FACTOR -> - VAR_CTE .)
    ]               reduce using rule 42 (FACTOR -> - VAR_CTE .)


state 158

    (15) CALLFUNC -> id ( CALLFUNC_PARAMS ) . ;

    ;               shift and go to state 189


state 159

    (17) CALLFUNC_PARAMS -> EXP , .

    )               reduce using rule 17 (CALLFUNC_PARAMS -> EXP , .)


state 160

    (83) TERM -> FACTOR * . TERM
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 190
    VAR_CTE                        shift and go to state 125
    FACTOR                         shift and go to state 128

state 161

    (84) TERM -> FACTOR / . TERM
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 191
    VAR_CTE                        shift and go to state 125
    FACTOR                         shift and go to state 128

state 162

    (4) ASSIGNMENT -> id = EXP ; .

    id              reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    if              reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    while           reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    printCol        reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    printTags       reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    printData       reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    printHeaders    reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    printCell       reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    printRow        reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    rbind           reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    cbind           reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    correlateHeaders reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    correlate       reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    }               reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)
    return          reduce using rule 4 (ASSIGNMENT -> id = EXP ; .)


state 163

    (36) EXPRESSION_SYM -> relop_lsequal .

    (               reduce using rule 36 (EXPRESSION_SYM -> relop_lsequal .)
    +               reduce using rule 36 (EXPRESSION_SYM -> relop_lsequal .)
    -               reduce using rule 36 (EXPRESSION_SYM -> relop_lsequal .)
    id              reduce using rule 36 (EXPRESSION_SYM -> relop_lsequal .)
    cte_float       reduce using rule 36 (EXPRESSION_SYM -> relop_lsequal .)
    cte_int         reduce using rule 36 (EXPRESSION_SYM -> relop_lsequal .)
    cte_char        reduce using rule 36 (EXPRESSION_SYM -> relop_lsequal .)
    cte_string      reduce using rule 36 (EXPRESSION_SYM -> relop_lsequal .)
    null            reduce using rule 36 (EXPRESSION_SYM -> relop_lsequal .)


state 164

    (38) EXPRESSION_SYM -> relop_equals .

    (               reduce using rule 38 (EXPRESSION_SYM -> relop_equals .)
    +               reduce using rule 38 (EXPRESSION_SYM -> relop_equals .)
    -               reduce using rule 38 (EXPRESSION_SYM -> relop_equals .)
    id              reduce using rule 38 (EXPRESSION_SYM -> relop_equals .)
    cte_float       reduce using rule 38 (EXPRESSION_SYM -> relop_equals .)
    cte_int         reduce using rule 38 (EXPRESSION_SYM -> relop_equals .)
    cte_char        reduce using rule 38 (EXPRESSION_SYM -> relop_equals .)
    cte_string      reduce using rule 38 (EXPRESSION_SYM -> relop_equals .)
    null            reduce using rule 38 (EXPRESSION_SYM -> relop_equals .)


state 165

    (37) EXPRESSION_SYM -> relop_grequal .

    (               reduce using rule 37 (EXPRESSION_SYM -> relop_grequal .)
    +               reduce using rule 37 (EXPRESSION_SYM -> relop_grequal .)
    -               reduce using rule 37 (EXPRESSION_SYM -> relop_grequal .)
    id              reduce using rule 37 (EXPRESSION_SYM -> relop_grequal .)
    cte_float       reduce using rule 37 (EXPRESSION_SYM -> relop_grequal .)
    cte_int         reduce using rule 37 (EXPRESSION_SYM -> relop_grequal .)
    cte_char        reduce using rule 37 (EXPRESSION_SYM -> relop_grequal .)
    cte_string      reduce using rule 37 (EXPRESSION_SYM -> relop_grequal .)
    null            reduce using rule 37 (EXPRESSION_SYM -> relop_grequal .)


state 166

    (39) EXPRESSION_SYM -> relop_notequal .

    (               reduce using rule 39 (EXPRESSION_SYM -> relop_notequal .)
    +               reduce using rule 39 (EXPRESSION_SYM -> relop_notequal .)
    -               reduce using rule 39 (EXPRESSION_SYM -> relop_notequal .)
    id              reduce using rule 39 (EXPRESSION_SYM -> relop_notequal .)
    cte_float       reduce using rule 39 (EXPRESSION_SYM -> relop_notequal .)
    cte_int         reduce using rule 39 (EXPRESSION_SYM -> relop_notequal .)
    cte_char        reduce using rule 39 (EXPRESSION_SYM -> relop_notequal .)
    cte_string      reduce using rule 39 (EXPRESSION_SYM -> relop_notequal .)
    null            reduce using rule 39 (EXPRESSION_SYM -> relop_notequal .)


state 167

    (33) EXPRESSION -> EXP EXPRESSION_SYM . EXP
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 192
    FACTOR                         shift and go to state 128

state 168

    (34) EXPRESSION_SYM -> < .

    (               reduce using rule 34 (EXPRESSION_SYM -> < .)
    +               reduce using rule 34 (EXPRESSION_SYM -> < .)
    -               reduce using rule 34 (EXPRESSION_SYM -> < .)
    id              reduce using rule 34 (EXPRESSION_SYM -> < .)
    cte_float       reduce using rule 34 (EXPRESSION_SYM -> < .)
    cte_int         reduce using rule 34 (EXPRESSION_SYM -> < .)
    cte_char        reduce using rule 34 (EXPRESSION_SYM -> < .)
    cte_string      reduce using rule 34 (EXPRESSION_SYM -> < .)
    null            reduce using rule 34 (EXPRESSION_SYM -> < .)


state 169

    (35) EXPRESSION_SYM -> > .

    (               reduce using rule 35 (EXPRESSION_SYM -> > .)
    +               reduce using rule 35 (EXPRESSION_SYM -> > .)
    -               reduce using rule 35 (EXPRESSION_SYM -> > .)
    id              reduce using rule 35 (EXPRESSION_SYM -> > .)
    cte_float       reduce using rule 35 (EXPRESSION_SYM -> > .)
    cte_int         reduce using rule 35 (EXPRESSION_SYM -> > .)
    cte_char        reduce using rule 35 (EXPRESSION_SYM -> > .)
    cte_string      reduce using rule 35 (EXPRESSION_SYM -> > .)
    null            reduce using rule 35 (EXPRESSION_SYM -> > .)


state 170

    (80) SUPER_EXPRESSION -> EXPRESSION relop_or . EXPRESSION
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_SYM EXP
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    EXPRESSION                     shift and go to state 193
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 133
    FACTOR                         shift and go to state 128

state 171

    (79) SUPER_EXPRESSION -> EXPRESSION relop_and . EXPRESSION
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_SYM EXP
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    EXPRESSION                     shift and go to state 194
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 133
    FACTOR                         shift and go to state 128

state 172

    (19) CONDITION -> if ( SUPER_EXPRESSION ) . BLOCK
    (20) CONDITION -> if ( SUPER_EXPRESSION ) . BLOCK else BLOCK
    (9) BLOCK -> . { BLOCK_INST BLOCK_STM }
    (10) BLOCK -> . { BLOCK_INST BLOCK_STM return EXP }

    {               shift and go to state 37

    BLOCK                          shift and go to state 195

state 173

    (55) PRINT_CELL -> printCell id [ EXP . , EXP ] ;

    ,               shift and go to state 196


state 174

    (10) BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .

    void            reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    int             reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    float           reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    char            reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    string          reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    main            reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    else            reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    id              reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    if              reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    while           reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    printCol        reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    printTags       reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    printData       reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    printHeaders    reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    printCell       reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    printRow        reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    rbind           reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    cbind           reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    correlateHeaders reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    correlate       reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    }               reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    return          reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)
    $end            reduce using rule 10 (BLOCK -> { BLOCK_INST BLOCK_STM return EXP } .)


state 175

    (3) ACCESS_ROW -> id . . col ( EXP )

    col             shift and go to state 197


state 176

    (60) PRINT_ROW -> printRow id ACCESS_ROW ; .

    id              reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    if              reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    while           reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    printCol        reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    printTags       reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    printData       reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    printHeaders    reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    printCell       reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    printRow        reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    rbind           reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    cbind           reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    correlateHeaders reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    correlate       reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    }               reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)
    return          reduce using rule 60 (PRINT_ROW -> printRow id ACCESS_ROW ; .)


state 177

    (6) BIND_ROWS -> rbind ( id , . ACCESS_ROW ) ;
    (3) ACCESS_ROW -> . id . col ( EXP )

    id              shift and go to state 138

    ACCESS_ROW                     shift and go to state 198

state 178

    (22) CORR -> correlate ( id , . id , VAR_CTE ) ;

    id              shift and go to state 199


state 179

    (21) CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , . TABLE_HEADER , VAR_CTE ) ;
    (81) TABLE_HEADER -> . id $ id

    id              shift and go to state 144

    TABLE_HEADER                   shift and go to state 200

state 180

    (49) LOOP -> while ( SUPER_EXPRESSION ) . BLOCK
    (9) BLOCK -> . { BLOCK_INST BLOCK_STM }
    (10) BLOCK -> . { BLOCK_INST BLOCK_STM return EXP }

    {               shift and go to state 37

    BLOCK                          shift and go to state 201

state 181

    (81) TABLE_HEADER -> id $ id .

    ,               reduce using rule 81 (TABLE_HEADER -> id $ id .)
    ;               reduce using rule 81 (TABLE_HEADER -> id $ id .)


state 182

    (2) ACCESS_COL -> id . row . ( EXP )

    (               shift and go to state 202


state 183

    (25) CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .

    dataframe       reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    int             reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    float           reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    char            reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    string          reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    id              reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    if              reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    while           reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    printCol        reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    printTags       reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    printData       reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    printHeaders    reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    printCell       reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    printRow        reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    rbind           reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    cbind           reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    correlateHeaders reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    correlate       reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    }               reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    return          reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    void            reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)
    main            reduce using rule 25 (CREATE_DF -> dataframe ( id , [ CREATE_DF_TAGS ] , FILE_INPUT ) ; .)


state 184

    (2) ACCESS_COL -> id . . row ( EXP )

    .               shift and go to state 149


state 185

    (5) BIND_COLS -> cbind ( id , ACCESS_COL . ) ;

    )               shift and go to state 203


state 186

    (31) EXP -> TERM - EXP .

    }               reduce using rule 31 (EXP -> TERM - EXP .)
    <               reduce using rule 31 (EXP -> TERM - EXP .)
    >               reduce using rule 31 (EXP -> TERM - EXP .)
    relop_lsequal   reduce using rule 31 (EXP -> TERM - EXP .)
    relop_grequal   reduce using rule 31 (EXP -> TERM - EXP .)
    relop_equals    reduce using rule 31 (EXP -> TERM - EXP .)
    relop_notequal  reduce using rule 31 (EXP -> TERM - EXP .)
    relop_and       reduce using rule 31 (EXP -> TERM - EXP .)
    relop_or        reduce using rule 31 (EXP -> TERM - EXP .)
    )               reduce using rule 31 (EXP -> TERM - EXP .)
    ,               reduce using rule 31 (EXP -> TERM - EXP .)
    ;               reduce using rule 31 (EXP -> TERM - EXP .)
    ]               reduce using rule 31 (EXP -> TERM - EXP .)


state 187

    (30) EXP -> TERM + EXP .

    }               reduce using rule 30 (EXP -> TERM + EXP .)
    <               reduce using rule 30 (EXP -> TERM + EXP .)
    >               reduce using rule 30 (EXP -> TERM + EXP .)
    relop_lsequal   reduce using rule 30 (EXP -> TERM + EXP .)
    relop_grequal   reduce using rule 30 (EXP -> TERM + EXP .)
    relop_equals    reduce using rule 30 (EXP -> TERM + EXP .)
    relop_notequal  reduce using rule 30 (EXP -> TERM + EXP .)
    relop_and       reduce using rule 30 (EXP -> TERM + EXP .)
    relop_or        reduce using rule 30 (EXP -> TERM + EXP .)
    )               reduce using rule 30 (EXP -> TERM + EXP .)
    ,               reduce using rule 30 (EXP -> TERM + EXP .)
    ;               reduce using rule 30 (EXP -> TERM + EXP .)
    ]               reduce using rule 30 (EXP -> TERM + EXP .)


state 188

    (40) FACTOR -> ( EXPRESSION ) .

    *               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    /               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    +               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    -               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    )               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    ;               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    <               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    >               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    relop_lsequal   reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    relop_grequal   reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    relop_equals    reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    relop_notequal  reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    relop_and       reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    relop_or        reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    ,               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    }               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)
    ]               reduce using rule 40 (FACTOR -> ( EXPRESSION ) .)


state 189

    (15) CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .

    id              reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    if              reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    while           reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    printCol        reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    printTags       reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    printData       reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    printHeaders    reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    printCell       reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    printRow        reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    rbind           reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    cbind           reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    correlateHeaders reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    correlate       reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    }               reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)
    return          reduce using rule 15 (CALLFUNC -> id ( CALLFUNC_PARAMS ) ; .)


state 190

    (83) TERM -> FACTOR * TERM .

    +               reduce using rule 83 (TERM -> FACTOR * TERM .)
    -               reduce using rule 83 (TERM -> FACTOR * TERM .)
    <               reduce using rule 83 (TERM -> FACTOR * TERM .)
    >               reduce using rule 83 (TERM -> FACTOR * TERM .)
    relop_lsequal   reduce using rule 83 (TERM -> FACTOR * TERM .)
    relop_grequal   reduce using rule 83 (TERM -> FACTOR * TERM .)
    relop_equals    reduce using rule 83 (TERM -> FACTOR * TERM .)
    relop_notequal  reduce using rule 83 (TERM -> FACTOR * TERM .)
    )               reduce using rule 83 (TERM -> FACTOR * TERM .)
    relop_and       reduce using rule 83 (TERM -> FACTOR * TERM .)
    relop_or        reduce using rule 83 (TERM -> FACTOR * TERM .)
    ,               reduce using rule 83 (TERM -> FACTOR * TERM .)
    ;               reduce using rule 83 (TERM -> FACTOR * TERM .)
    }               reduce using rule 83 (TERM -> FACTOR * TERM .)
    ]               reduce using rule 83 (TERM -> FACTOR * TERM .)


state 191

    (84) TERM -> FACTOR / TERM .

    +               reduce using rule 84 (TERM -> FACTOR / TERM .)
    -               reduce using rule 84 (TERM -> FACTOR / TERM .)
    <               reduce using rule 84 (TERM -> FACTOR / TERM .)
    >               reduce using rule 84 (TERM -> FACTOR / TERM .)
    relop_lsequal   reduce using rule 84 (TERM -> FACTOR / TERM .)
    relop_grequal   reduce using rule 84 (TERM -> FACTOR / TERM .)
    relop_equals    reduce using rule 84 (TERM -> FACTOR / TERM .)
    relop_notequal  reduce using rule 84 (TERM -> FACTOR / TERM .)
    )               reduce using rule 84 (TERM -> FACTOR / TERM .)
    relop_and       reduce using rule 84 (TERM -> FACTOR / TERM .)
    relop_or        reduce using rule 84 (TERM -> FACTOR / TERM .)
    ,               reduce using rule 84 (TERM -> FACTOR / TERM .)
    ;               reduce using rule 84 (TERM -> FACTOR / TERM .)
    }               reduce using rule 84 (TERM -> FACTOR / TERM .)
    ]               reduce using rule 84 (TERM -> FACTOR / TERM .)


state 192

    (33) EXPRESSION -> EXP EXPRESSION_SYM EXP .

    )               reduce using rule 33 (EXPRESSION -> EXP EXPRESSION_SYM EXP .)
    relop_and       reduce using rule 33 (EXPRESSION -> EXP EXPRESSION_SYM EXP .)
    relop_or        reduce using rule 33 (EXPRESSION -> EXP EXPRESSION_SYM EXP .)


state 193

    (80) SUPER_EXPRESSION -> EXPRESSION relop_or EXPRESSION .

    )               reduce using rule 80 (SUPER_EXPRESSION -> EXPRESSION relop_or EXPRESSION .)


state 194

    (79) SUPER_EXPRESSION -> EXPRESSION relop_and EXPRESSION .

    )               reduce using rule 79 (SUPER_EXPRESSION -> EXPRESSION relop_and EXPRESSION .)


state 195

    (19) CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .
    (20) CONDITION -> if ( SUPER_EXPRESSION ) BLOCK . else BLOCK

    id              reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    if              reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    while           reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    printCol        reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    printTags       reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    printData       reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    printHeaders    reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    printCell       reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    printRow        reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    rbind           reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    cbind           reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    correlateHeaders reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    correlate       reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    }               reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    return          reduce using rule 19 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK .)
    else            shift and go to state 204


state 196

    (55) PRINT_CELL -> printCell id [ EXP , . EXP ] ;
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 205
    FACTOR                         shift and go to state 128

state 197

    (3) ACCESS_ROW -> id . col . ( EXP )

    (               shift and go to state 206


state 198

    (6) BIND_ROWS -> rbind ( id , ACCESS_ROW . ) ;

    )               shift and go to state 207


state 199

    (22) CORR -> correlate ( id , id . , VAR_CTE ) ;

    ,               shift and go to state 208


state 200

    (21) CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER . , VAR_CTE ) ;

    ,               shift and go to state 209


state 201

    (49) LOOP -> while ( SUPER_EXPRESSION ) BLOCK .

    id              reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    if              reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    while           reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    printCol        reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    printTags       reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    printData       reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    printHeaders    reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    printCell       reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    printRow        reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    rbind           reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    cbind           reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    correlateHeaders reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    correlate       reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    }               reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)
    return          reduce using rule 49 (LOOP -> while ( SUPER_EXPRESSION ) BLOCK .)


state 202

    (2) ACCESS_COL -> id . row ( . EXP )
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 210
    FACTOR                         shift and go to state 128

state 203

    (5) BIND_COLS -> cbind ( id , ACCESS_COL ) . ;

    ;               shift and go to state 211


state 204

    (20) CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else . BLOCK
    (9) BLOCK -> . { BLOCK_INST BLOCK_STM }
    (10) BLOCK -> . { BLOCK_INST BLOCK_STM return EXP }

    {               shift and go to state 37

    BLOCK                          shift and go to state 212

state 205

    (55) PRINT_CELL -> printCell id [ EXP , EXP . ] ;

    ]               shift and go to state 213


state 206

    (3) ACCESS_ROW -> id . col ( . EXP )
    (29) EXP -> . TERM
    (30) EXP -> . TERM + EXP
    (31) EXP -> . TERM - EXP
    (82) TERM -> . FACTOR
    (83) TERM -> . FACTOR * TERM
    (84) TERM -> . FACTOR / TERM
    (40) FACTOR -> . ( EXPRESSION )
    (41) FACTOR -> . + VAR_CTE
    (42) FACTOR -> . - VAR_CTE
    (43) FACTOR -> . VAR_CTE
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    (               shift and go to state 122
    +               shift and go to state 123
    -               shift and go to state 124
    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    TERM                           shift and go to state 119
    VAR_CTE                        shift and go to state 125
    EXP                            shift and go to state 214
    FACTOR                         shift and go to state 128

state 207

    (6) BIND_ROWS -> rbind ( id , ACCESS_ROW ) . ;

    ;               shift and go to state 215


state 208

    (22) CORR -> correlate ( id , id , . VAR_CTE ) ;
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    VAR_CTE                        shift and go to state 216

state 209

    (21) CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , . VAR_CTE ) ;
    (89) VAR_CTE -> . id
    (90) VAR_CTE -> . cte_float
    (91) VAR_CTE -> . cte_int
    (92) VAR_CTE -> . cte_char
    (93) VAR_CTE -> . cte_string
    (94) VAR_CTE -> . null

    id              shift and go to state 131
    cte_float       shift and go to state 129
    cte_int         shift and go to state 130
    cte_char        shift and go to state 121
    cte_string      shift and go to state 118
    null            shift and go to state 120

    VAR_CTE                        shift and go to state 217

state 210

    (2) ACCESS_COL -> id . row ( EXP . )

    )               shift and go to state 218


state 211

    (5) BIND_COLS -> cbind ( id , ACCESS_COL ) ; .

    id              reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    if              reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    while           reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    printCol        reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    printTags       reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    printData       reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    printHeaders    reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    printCell       reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    printRow        reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    rbind           reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    cbind           reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    correlateHeaders reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    correlate       reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    }               reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)
    return          reduce using rule 5 (BIND_COLS -> cbind ( id , ACCESS_COL ) ; .)


state 212

    (20) CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .

    id              reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    if              reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    while           reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    printCol        reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    printTags       reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    printData       reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    printHeaders    reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    printCell       reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    printRow        reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    rbind           reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    cbind           reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    correlateHeaders reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    correlate       reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    }               reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)
    return          reduce using rule 20 (CONDITION -> if ( SUPER_EXPRESSION ) BLOCK else BLOCK .)


state 213

    (55) PRINT_CELL -> printCell id [ EXP , EXP ] . ;

    ;               shift and go to state 219


state 214

    (3) ACCESS_ROW -> id . col ( EXP . )

    )               shift and go to state 220


state 215

    (6) BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .

    id              reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    if              reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    while           reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    printCol        reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    printTags       reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    printData       reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    printHeaders    reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    printCell       reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    printRow        reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    rbind           reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    cbind           reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    correlateHeaders reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    correlate       reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    }               reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)
    return          reduce using rule 6 (BIND_ROWS -> rbind ( id , ACCESS_ROW ) ; .)


state 216

    (22) CORR -> correlate ( id , id , VAR_CTE . ) ;

    )               shift and go to state 221


state 217

    (21) CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE . ) ;

    )               shift and go to state 222


state 218

    (2) ACCESS_COL -> id . row ( EXP ) .

    ;               reduce using rule 2 (ACCESS_COL -> id . row ( EXP ) .)
    )               reduce using rule 2 (ACCESS_COL -> id . row ( EXP ) .)


state 219

    (55) PRINT_CELL -> printCell id [ EXP , EXP ] ; .

    id              reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    if              reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    while           reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    printCol        reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    printTags       reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    printData       reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    printHeaders    reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    printCell       reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    printRow        reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    rbind           reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    cbind           reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    correlateHeaders reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    correlate       reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    }               reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)
    return          reduce using rule 55 (PRINT_CELL -> printCell id [ EXP , EXP ] ; .)


state 220

    (3) ACCESS_ROW -> id . col ( EXP ) .

    )               reduce using rule 3 (ACCESS_ROW -> id . col ( EXP ) .)
    ;               reduce using rule 3 (ACCESS_ROW -> id . col ( EXP ) .)


state 221

    (22) CORR -> correlate ( id , id , VAR_CTE ) . ;

    ;               shift and go to state 223


state 222

    (21) CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) . ;

    ;               shift and go to state 224


state 223

    (22) CORR -> correlate ( id , id , VAR_CTE ) ; .

    id              reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    if              reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    while           reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    printCol        reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    printTags       reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    printData       reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    printHeaders    reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    printCell       reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    printRow        reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    rbind           reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    cbind           reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    correlateHeaders reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    correlate       reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    }               reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)
    return          reduce using rule 22 (CORR -> correlate ( id , id , VAR_CTE ) ; .)


state 224

    (21) CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .

    id              reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    if              reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    while           reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    printCol        reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    printTags       reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    printData       reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    printHeaders    reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    printCell       reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    printRow        reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    rbind           reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    cbind           reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    correlateHeaders reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    correlate       reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    }               reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)
    return          reduce using rule 21 (CORR_HEADERS -> correlateHeaders ( TABLE_HEADER , TABLE_HEADER , VAR_CTE ) ; .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for int in state 0 resolved as shift
WARNING: shift/reduce conflict for float in state 0 resolved as shift
WARNING: shift/reduce conflict for char in state 0 resolved as shift
WARNING: shift/reduce conflict for string in state 0 resolved as shift
WARNING: shift/reduce conflict for int in state 3 resolved as shift
WARNING: shift/reduce conflict for float in state 3 resolved as shift
WARNING: shift/reduce conflict for char in state 3 resolved as shift
WARNING: shift/reduce conflict for string in state 3 resolved as shift
WARNING: reduce/reduce conflict in state 80 resolved using rule (OPERATION -> CALLFUNC)
WARNING: rejected rule (STATEMENT -> CALLFUNC) in state 80
WARNING: Rule (STATEMENT -> CALLFUNC) is never reduced
